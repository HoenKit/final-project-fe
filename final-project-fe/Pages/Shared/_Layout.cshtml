@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@using Microsoft.Extensions.Options
@using final_project_fe.Utils
@inject IOptions<SignalrSetting> SignalrSetting
@inject IOptions<ApiSettings> ApiSettings
@{
	var roles = new List<string>();
	decimal userPoints = 0;
	Guid? userId = null;
	var BaseUrl = ApiSettings.Value.BaseUrl;
	var HubUrl = SignalrSetting.Value.HubUrl;
	var token = Context.Request.Cookies["AccessToken"];
	bool isAuthenticated = !string.IsNullOrEmpty(token);
	if (!string.IsNullOrEmpty(token))
	{
		var handler = new JwtSecurityTokenHandler();
		var jwtToken = handler.ReadJwtToken(token);
		roles = jwtToken.Claims
					.Where(c => c.Type == ClaimTypes.Role || c.Type == "role")
					.Select(c => c.Value)
					.ToList();

		var pointsClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == "points");
		if (pointsClaim != null)
		{
			var pointsValue = pointsClaim.Value;

			// Thêm debug này để xem chính xác
			var debugInfo = $"pointsValue: '{pointsValue}' | IsNull: {pointsValue == null} | IsEmpty: {string.IsNullOrEmpty(pointsValue)} | Length: {pointsValue?.Length ?? -1}";

			// Sau đó parse
			if (pointsValue != null && decimal.TryParse(pointsValue, out var points))
			{
				userPoints = points;
			}
		}
		var userIdClaim = jwtToken.Claims.FirstOrDefault(c => c.Type == ClaimTypes.NameIdentifier);
		if (userIdClaim != null && Guid.TryParse(userIdClaim.Value, out var parsedId))
		{
			userId = parsedId;
		}
	}

	bool isMentor = roles.Contains("Mentor");
	bool isUser = roles.Contains("User");
	bool isAdmin = roles.Contains("Admin");
}
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"]</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
	<link rel="icon" type="image/x-icon" href="~/images/fav_icon.png" />
	<link rel="stylesheet" href="~/css/main.min.css">
	<link rel="stylesheet" href="~/css/style.css">
	<link rel="stylesheet" href="~/css/color.css">
	<link rel="stylesheet" href="~/css/responsive.css">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">
	
	@* <link rel="stylesheet" href="~/final_project_fe.styles.css" asp-append-version="true" /> *@
	<style>
		ul, ol {
			list-style: none;
			padding-left: 0;
		}

		.badge-new {
			background-color: green;
			color: white;
			font-size: 10px;
			font-weight: bold;
			padding: 2px 4px;
			border-radius: 4px;
			margin-left: 6px;
		}
		.user-img {
			position: relative;
			display: inline-block;
			cursor: pointer;
		}

			.user-img img {
				width: 40px;
				height: 40px;
				border-radius: 50%;
				border: 2px solid #e1e8ed;
			}

		.custom-user-menu {
			position: absolute;
			top: 100%;
			right: 0;
			background: white;
			min-width: 200px;
			border-radius: 8px;
			box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
			border: 1px solid #e1e8ed;
			opacity: 0;
			visibility: hidden;
			transform: translateY(-10px);
			transition: all 0.3s ease;
			z-index: 1000;
			margin-top: 8px;
			/* Đảm bảo menu không bị overflow hidden */
			overflow: visible;
		}

			.custom-user-menu.show {
				opacity: 1;
				visibility: visible;
				transform: translateY(0);
			}

			.custom-user-menu::before {
				content: '';
				position: absolute;
				top: -8px;
				right: 15px;
				width: 0;
				height: 0;
				border-left: 8px solid transparent;
				border-right: 8px solid transparent;
				border-bottom: 8px solid white;
			}

			.custom-user-menu a {
				display: flex;
				align-items: center;
				padding: 12px 16px;
				color: #333;
				text-decoration: none;
				font-size: 14px;
				transition: background-color 0.2s ease;
				border-bottom: 1px solid #f0f0f0;
				/* Đảm bảo link có thể click */
				pointer-events: auto;
				position: relative;
				z-index: 1001;
			}

				.custom-user-menu a:last-child {
					border-bottom: none;
					border-radius: 0 0 8px 8px;
				}

				.custom-user-menu a:first-child {
					border-radius: 8px 8px 0 0;
				}

				.custom-user-menu a:hover {
					background-color: #f8f9fa;
					color: #007bff;
				}

				.custom-user-menu a i {
					margin-right: 10px;
					width: 16px;
					text-align: center;
					color: #666;
				}

				.custom-user-menu a:hover i {
					color: #007bff;
				}
	</style>
</head>
<body>
	@*     <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">final_project_fe</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header> *@
	<header>
		<div class="topbar">
			<div class="logo">
				<a style="width:85%; margin-bottom:7%" title="" asp-page="/Index"><img src="~/images/Logoda.png" alt=""></a>
			</div>

			<div class="top-area">
				<ul style="margin-bottom: -10%;" class="main-menu">

					<li>
						<a asp-area="" asp-page="/Index" title="">Home</a>
					</li>
					<li>
						<a asp-page="/Mentor/MentorPage/Index" title="">Course</a>
						@* <ul>
							<li>
								<a class="nav-link text-dark" asp-area="" asp-page="/PointTransaction">Buy Point</a>
							</li>
							<li>
								<a class="nav-link text-dark" asp-area="" asp-page="/PurchaseHistory">Purchase History</a>
							</li>
							<li>
								<a class="nav-link text-dark" asp-area="" asp-page="/TransactionHistory">Transaction History</a>
							</li>
							<li>
								<a class="nav-link text-dark" asp-area="" asp-page="/Privacy">Privacy</a>
							</li>
							<li>
								<a class="nav-link text-dark" asp-area="" asp-page="/ErrorPage">404</a>
							</li>
						</ul> *@
					</li>
					@if (isMentor)
					{
						<li>
							<a asp-page="/Mentor/MentorPage/Dashboard">Mentor Page</a>
						</li>
					}
					@if (isAdmin)
					{
						<li style="all: unset; list-style: none; padding: 0; margin: 0;">
							<a asp-page="/Admin/Dashboard/Index">Admin Page</a>
						</li>
					}
					@if (isAuthenticated)
					{
						@if (!isAdmin)
						{
							<li>
								<a asp-page="/UserPage">My page</a>
							</li>
							<li style="all: unset; list-style: none; padding: 0; margin: 0;">
								<a asp-page="/CourseRecommend">Recommend Course</a>
							</li>
						}
					}
				</ul>
				<ul style="margin-bottom: -3.5%;" class="setting-area">
					<li class="search-container">
						<a href="#" title="Search" data-ripple=""><i class="ti-search"></i></a>
						<div class="searched">
							<div class="form-search position-relative">
								<input type="text" id="searchInput" placeholder="Search Users, Courses, Posts">
								<button type="button" id="searchBtn" data-ripple><i class="ti-search"></i></button>

								<!-- Gợi ý hiển thị ngay bên dưới input -->
								<ul id="searchResults" class="list-group position-absolute w-100 mt-1 shadow"
									style="z-index: 999; max-height: 350px; overflow-y: auto;"></ul>
							</div>
						</div>
					</li>
					@* <li><a href="newsfeed.html" title="Home" data-ripple=""><i class="ti-home"></i></a></li> *@
					@if (isAuthenticated)
					{
						<li id="pointDisplay">
							<div href="#" title="Your Points" data-ripple="">
								<span id="userPointBadge" style="
								display: inline-flex;
								align-items: center;
								justify-content: center;
								margin-left: 5px;
								background-color: #ff9800;
								color: #fff;
								font-size: 13px;
								font-weight: bold;
								padding: 2px 10px;
								border-radius: 20px;
								min-width: 40px;
								text-align: center;
								line-height: 1.2;
								margin-bottom: -13px;
									">0</span>
							</div>
						</li>
						@* <li><a href="newsfeed.html" title="Home" data-ripple=""><i class="ti-home"></i></a></li> *@
						<li id="notificationDropdown">
							<a href="#" title="Notification" data-ripple="">
								<i class="ti-bell"></i><span id="notificationCount">0</span>
							</a>
							<div class="dropdowns">
								<span id="notificationHeader">Notifications</span>
								<ul class="drops-menu" id="notificationList">
									<!-- JS sẽ render -->
								</ul>
							</div>
						</li>
					}
				</ul>
				<div class="user-img" id="userImg">
					<img src="~/images/fav_icon.png" alt="">
					<div class="custom-user-menu" id="userMenu">
						@if (isAuthenticated)
						{
							@* <text>
                            <a asp-page="#" id="userPointsLink">
                                <i class="bi bi-p-circle"></i>
                                <span id="userPoints">@userPoints.ToString("N0")</span>
                            </a>
                        </text> *@
							if (!isAdmin && !isMentor)
							{
								<text>
									<a asp-page="/MentorRegulations"><i class="bi bi-person-vcard"></i> Become a Mentor</a>
								</text>
							}
							<text>
								@if (!isAdmin)
								{
									<a asp-page="/UserProfile"><i class="ti-user"></i> View Profile</a>
									<a asp-page="/Chatting"><i class="bi bi-wechat"></i> Chatting</a>
									<a asp-page="/UserCourse"><i class="bi bi-book-half"></i> My Own Course</a>
								}
								<a asp-page="/EventPage"><i class="bi bi-patch-check"></i> Event</a>
								<a asp-page="/Logout"><i class="bi bi-box-arrow-in-left" style="font-size: 115%;"></i> Logout</a>
							</text>
						}
						else
						{
							<text>
								<a asp-page="/Login"><i class="bi bi-box-arrow-in-right" style="font-size: 118%;"></i> Login</a>
								<a asp-page="/Register"><i class="bi bi-pencil-square"></i> Register</a>
							</text>
						}
					</div>
				</div>

				@* <span class="ti-menu main-menu" data-ripple=""></span> *@
			</div>
		</div><!-- topbar -->
		@* 	<div class="side-panel">
			<h4 class="panel-title">Account Manage</h4>
			<ul class="navbar-nav flex-grow-1">
				@if (isAuthenticated)
				{

					@if (!isMentor)
					{
						<li style="padding-bottom: 4%;">
							<i class="bi bi-person-vcard"></i>
							<a asp-page="/MentorRegulations">Become a Mentor</a>
						</li>
					}
					<li>
						<i style="font-size: 115%;" class="bi bi-box-arrow-in-left"></i>
						<a asp-page="/Logout">Logout</a>
					</li>
				}
				else
				{
					<li style="padding-bottom: 4%;">
						<i style="font-size:118%;" class="bi bi-box-arrow-in-right"></i>
						<a asp-page="/Login">Login</a>
					</li>
					<li style="padding-left: 2%;">
						<i class="bi bi-pencil-square"></i>
						<a asp-page="/Register">Register</a>
					</li>
				}
			</ul>
		</div><!-- side panel --> *@
	</header>
	<!-- Post Detail Modal -->
	<div class="modal fade" id="postDetailModal" tabindex="-1" aria-labelledby="postDetailModalLabel" aria-hidden="true">
		<div class="modal-dialog modal-xl" style="max-width: 50% !important;">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="postDetailModalLabel">Post Details</h5>
					@* <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button> *@
				</div>
				<div class="modal-body" id="postModalBody">
					<div class="d-flex justify-content-center">
						<div class="spinner-border" role="status">
							<span class="visually-hidden">Loading...</span>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="">
		<main role="main" class="pb-3">
			@RenderBody()
			@Html.Partial("_Notification")
			@Html.Partial("_ConfirmDialog")
		</main>
	</div>

	<footer class="border-top footer text-muted">
		<div class="container">
			<div class="row">
				<div class="col-lg-4 col-md-4">
					<div class="widget">
						<div class="foot-logo">
							<div class="logo">
								<a style="width:85%; margin-bottom:7%" title="" asp-page="/Index"><img src="~/images/Logoda.png" alt=""></a>
							</div>
							<p>
								The trio took this simple idea and built it into the world’s leading carpooling platform.
							</p>
						</div>
						<ul class="location">
							<li>
								<i class="ti-map-alt"></i>
								<p>33 new montgomery st.750 san francisco, CA USA 94105.</p>
							</li>
							<li>
								<i class="ti-mobile"></i>
								<p>+1-56-346 345</p>
							</li>
						</ul>
					</div>
				</div>
				<div class="col-lg-2 col-md-4">
					<div class="widget">
						<div class="widget-title"><h4>follow</h4></div>
						<ul class="list-style">
							<li><i class="fa fa-facebook-square"></i> <a href="https://web.facebook.com/shopcircut/" title="">facebook</a></li>
							<li><i class="fa fa-twitter-square"></i><a href="https://twitter.com/login?lang=en" title="">twitter</a></li>
							<li><i class="fa fa-instagram"></i><a href="https://www.instagram.com/?hl=en" title="">instagram</a></li>
							<li><i class="fa fa-google-plus-square"></i> <a href="https://plus.google.com/discover" title="">Google+</a></li>
							<li><i class="fa fa-pinterest-square"></i> <a href="https://www.pinterest.com/" title="">Pintrest</a></li>
						</ul>
					</div>
				</div>
				<div class="col-lg-2 col-md-4">
					<div class="widget">
						<div class="widget-title"><h4>Navigate</h4></div>
						<ul class="list-style">
							<li><a href="#" title="">about us</a></li>
							<li><a href="#" title="">contact us</a></li>
							<li><a href="#" title="">terms & Conditions</a></li>
							<li><a href="#" title="">RSS syndication</a></li>
							<li><a href="#" title="">Sitemap</a></li>
						</ul>
					</div>
				</div>
				<div class="col-lg-2 col-md-4">
					<div class="widget">
						<div class="widget-title"><h4>useful links</h4></div>
						<ul class="list-style">
							<li><a href="#" title="">leasing</a></li>
							<li><a href="#" title="">submit route</a></li>
							<li><a href="#" title="">how does it work?</a></li>
							<li><a href="#" title="">agent listings</a></li>
							<li><a href="#" title="">view All</a></li>
						</ul>
					</div>
				</div>
				<div class="col-lg-2 col-md-4">
					<div class="widget">
						<div class="widget-title"><h4>download apps</h4></div>
						<ul class="colla-apps">
							<li><a href="https://play.google.com/store?hl=en" title=""><i class="fa fa-android"></i>android</a></li>
							<li><a href="https://www.apple.com/lae/ios/app-store/" title=""><i class="ti-apple"></i>iPhone</a></li>
							<li><a href="https://www.microsoft.com/store/apps" title=""><i class="fa fa-windows"></i>Windows</a></li>
						</ul>
					</div>
				</div>
			</div>
		</div>
	</footer>

	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

	@* <script data-cfasync="false" src="../../cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script> *@
	<script src="~/js/main.min.js"></script>
	<script src="~/js/script.js"></script>
	<script src="~/js/map-init.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
	<script>
		const apiBaseUrl = "@BaseUrl";   // từ ApiSettings
		const hubUrl = "@HubUrl";        // từ SignalrSetting
		const userId = "@(userId?.ToString() ?? "")"; // từ JWT claim

		// Render 1 item notification
		function renderNotificationItem(notification, isNew = false) {
			return `
				<li data-id="${notification.notificationId}">
					<a href="/notifications" title="">
						<div class="mesg-meta">
							<span>${notification.message}</span>
							<i>${new Date(notification.createdAt).toLocaleString()}</i>
						</div>
					</a>
					<span class="tag ${isNew ? "green" : ""}">${isNew ? "New" : ""}</span>
				</li>
			`;
		}

		function getCookie(name) {
			const value = `; ${document.cookie}`;
			const parts = value.split(`; ${name}=`);
			if (parts.length === 2) return parts.pop().split(";").shift();
		}

		// Load notification khi vừa load trang (chỉ render, không cộng count)
				async function loadNotifications() {
			if (!userId) {
				console.log("👤 Guest user → skip loadNotifications");
				const countEl = document.getElementById("notificationCount");
				const headerEl = document.getElementById("notificationHeader");
				if (countEl) countEl.innerText = 0;
				if (headerEl) headerEl.innerText = "No Notifications";
				return;
			}
			try {
				const token = getCookie("AccessToken");
				const response = await fetch(`${apiBaseUrl}/Notification/get-by-user/${userId}`, {
					headers: {
						"Authorization": `Bearer ${token}`,
						"Content-Type": "application/json"
					}
				});

				if (!response.ok) throw new Error("Failed to fetch notifications");
				const notifications = await response.json();

				const list = document.getElementById("notificationList");
				if (!list) return;
				list.innerHTML = "";

				notifications.forEach(noti => {
					list.insertAdjacentHTML("beforeend", renderNotificationItem(noti, false));
				});

				const countEl = document.getElementById("notificationCount");
				const headerEl = document.getElementById("notificationHeader");
				if (countEl) countEl.innerText = 0;
				if (headerEl) {
					headerEl.innerText =
						notifications.length > 0
							? `${notifications.length} Notifications`
							: "No Notifications";
				}
			} catch (err) {
				console.error("❌ Error loading notifications:", err);
			}
		}

		// Khi mở dropdown thì reset badge
		const dropdown = document.getElementById("notificationDropdown");
		if (dropdown) {
			dropdown.addEventListener("click", () => {
				clearNewBadges();
			});
		}

		// ---- SignalR connection ----
		if (userId) {
			if (!window.signalRConnection) {
				window.signalRConnection = new signalR.HubConnectionBuilder()
					.withUrl(`${hubUrl}/postHub?UserId=${userId}`)
					.withAutomaticReconnect()
					.build();

				window.signalRConnection.on("ReceiveNotification", (notification) => {
					if (typeof notification === "string") {
						try {
							notification = JSON.parse(notification);
						} catch {
							return;
						}
					}
					if (!notification || !notification.notificationId) return;

					const list = document.getElementById("notificationList");
					if (!list) return;

					const countEl = document.getElementById("notificationCount");
					let count = parseInt(countEl.innerText) || 0;
					count++;
					countEl.innerText = count;

					list.insertAdjacentHTML("afterbegin", renderNotificationItem(notification, true));
					const header = document.getElementById("notificationHeader");
					header.innerText = `${list.children.length} Notifications`;
				});

				window.signalRConnection.start()
					.then(() => console.log("✅ SignalR connected"))
					.catch(err => console.error("❌ SignalR error:", err));
			}
		}

		function clearNewBadges() {
			document.getElementById("notificationCount").innerText = 0;
			document.querySelectorAll("#notificationList li .tag").forEach(tag => {
				tag.innerText = "";
				tag.classList.remove("green");
			});
			const list = document.getElementById("notificationList");
			const header = document.getElementById("notificationHeader");
			if (list && list.children.length > 0) {
				header.innerText = `Notifications`;
			} else {
				header.innerText = "No Notifications";
			}
		}

		// gọi khi load trang
		loadNotifications();
	</script>
	<script>
				document.addEventListener("DOMContentLoaded", function () {
			const userId = "@(userId?.ToString() ?? "")";
			const badgeEl = document.getElementById("userPointBadge");

			if (!userId) {
				if (badgeEl) badgeEl.textContent = 0;
				console.log("👤 Guest user → skip fetch point");
				return;
			}

			const BaseUrl = "@BaseUrl";
			const apiUrl = `${BaseUrl}/User/GetUserById/${userId}`;

			fetch(apiUrl)
				.then(response => {
					if (!response.ok) throw new Error("Network response was not ok");
					return response.json();
				})
				.then(user => {
					if (badgeEl) badgeEl.textContent = user.point ?? 0;
				})
				.catch(() => {
					if (badgeEl) badgeEl.textContent = 0;
				});
		});
	</script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const hasToken = document.cookie.includes('AccessToken=');

			if (!hasToken) {
				sessionStorage.removeItem('courseRecommendLoadingShown');
			}
		});
	</script>
	<script>
				document.addEventListener('DOMContentLoaded', function () {
			const hasToken = document.cookie.includes('AccessToken=');

			if (!hasToken) {
				sessionStorage.removeItem('courseRecommendLoadingShown');
			}
		});

		// Fixed JavaScript cho user menu
		const userImg = document.getElementById('userImg');
		const userMenu = document.getElementById('userMenu');

		// Toggle menu khi click vào ảnh user (không phải vào dropdown menu)
		userImg.addEventListener('click', function (e) {
			e.stopPropagation(); // Ngăn event bubble up

			// Nếu click vào link trong menu, không toggle menu
			if (e.target.closest('.custom-user-menu a')) {
				return;
			}

			// Nếu click vào ảnh hoặc vùng user-img (không phải menu), toggle menu
			if (e.target.closest('img') || (e.target === userImg && !e.target.closest('.custom-user-menu'))) {
				userMenu.classList.toggle('show');
			}
		});

		// Click bên ngoài sẽ đóng menu
		document.addEventListener('click', function (event) {
			// Chỉ đóng menu nếu click bên ngoài toàn bộ user-img container
			if (!userImg.contains(event.target)) {
				userMenu.classList.remove('show');
			}
		});

		// Đảm bảo các link trong menu hoạt động bình thường
		document.querySelectorAll('.custom-user-menu a').forEach(link => {
			link.addEventListener('click', function (e) {
				e.stopPropagation(); // Ngăn event bubble up
				// Menu sẽ tự đóng khi navigate sang trang mới
				// Không cần gọi userMenu.classList.remove('show') ở đây
			});
		});
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const searchInput = document.getElementById("searchInput");
			const searchBtn = document.getElementById("searchBtn");
			const resultsContainer = document.getElementById("searchResults");
			let debounceTimer;

			const baseUrl = "@BaseUrl";

			async function doSearch(isSuggestion = false) {
				const term = searchInput.value.trim();
				if (!term) {
					resultsContainer.innerHTML = "";
					return;
				}

				try {
					const response = await fetch(`${baseUrl}/Post/search-all?searchTerm=${encodeURIComponent(term)}&searchType=all`);
					if (!response.ok) throw new Error("Search failed");
					const data = await response.json();

					let html = "";

					// Users
					if (data.users && data.users.length > 0) {
						html += `<li class="list-group-item fw-bold bg-light">Users</li>`;
						data.users.forEach(u => {
							const firstName = u.userMetaData?.firstName || "";
							const lastName = u.userMetaData?.lastName || "";
							const email = u.email || "Unknown";
							const displayName = firstName || lastName ? `${firstName} ${lastName}`.trim() : email;

							html += `
								<li class="list-group-item search-item" data-type="user" data-id="${u.userId}">
									<i class="ti-user me-2"></i>
									${displayName}
									<small class="text-muted">(${email})</small>
								</li>`;
						});
					}

					// Courses
					if (data.courses && data.courses.length > 0) {
						html += `<li class="list-group-item fw-bold bg-light">Courses</li>`;
						data.courses.forEach(c => {
							html += `
								<li class="list-group-item search-item" data-type="course" data-id="${c.courseId}">
									<i class="ti-book me-2"></i> ${c.courseName || "Untitled Course"}
								</li>`;
						});
					}

					// Posts
					if (data.posts && data.posts.length > 0) {
						html += `<li class="list-group-item fw-bold bg-light">Posts</li>`;
						data.posts.forEach(p => {
							html += `
								<li class="list-group-item search-item" data-type="post" data-id="${p.postId}">
									<i class="ti-pencil-alt me-2"></i> ${p.title || "Untitled Post"}
								</li>`;
						});
					}

					resultsContainer.innerHTML = html || `<li class="list-group-item">No results found</li>`;

					// Gắn sự kiện click cho các item
					document.querySelectorAll(".search-item").forEach(item => {
						item.addEventListener("click", function () {
							const type = this.getAttribute("data-type");
							const id = this.getAttribute("data-id");

							if (type === "user") {
								window.location.href = `/UserPage?userId=${id}`;
							} else if (type === "course") {
								window.location.href = `/Mentor/MentorPage/CourseDetail?courseId=${id}`;
							} else if (type === "post") {
								showPostModal(id);
								resultsContainer.innerHTML = "";
								searchInput.value = "";
							}
						});
					});
				} catch (err) {
					console.error(err);
					resultsContainer.innerHTML = `<li class="list-group-item text-danger">Error searching</li>`;
				}
			}

			// Hàm hiển thị modal chi tiết bài post
			async function showPostModal(postId) {
				const modal = new bootstrap.Modal(document.getElementById('postDetailModal'));
				const modalBody = document.getElementById('postModalBody');

				// Hiển thị loading
				modalBody.innerHTML = `
					<div class="d-flex justify-content-center">
						<div class="spinner-border" role="status">
							<span class="visually-hidden">Loading...</span>
						</div>
					</div>
				`;

				modal.show();

				try {
					// Tìm post trong trang hiện tại trước
					const postElements = document.querySelectorAll('[data-post-id="' + postId + '"]');
					let postFound = false;

					if (postElements.length > 0) {
						const postContainer = postElements[0].closest('.card');
						if (postContainer) {
							const postClone = postContainer.cloneNode(true);

							// Loại bỏ các element không cần thiết trong modal
							const dropdownMenus = postClone.querySelectorAll('.dropdown');
							dropdownMenus.forEach(menu => menu.remove());

							const commentForms = postClone.querySelectorAll('.comment-form');
							commentForms.forEach(form => form.remove());

							modalBody.innerHTML = postClone.outerHTML;
							postFound = true;
						}
					}

					// Nếu không tìm thấy trong DOM, gọi API để lấy full data
					if (!postFound) {
						try {
							// Gọi API GetDetail với endpoint mới
							const response = await fetch(`${baseUrl}/Post/GetDetail/${postId}`);
							if (response.ok) {
								const postData = await response.json();
								displayPostFromAPI(postData);
							} else {
								throw new Error(`HTTP ${response.status}: Post not found`);
							}
						} catch (apiError) {
							console.log("API call failed:", apiError);
							modalBody.innerHTML = `
								<div class="alert alert-warning">
									<i class="ti-info-alt me-2"></i>
									Unable to load post details. ${apiError.message}
									<br><br>
									<small class="text-muted">Post ID: ${postId}</small>
									<br>
									<button class="btn btn-sm btn-primary mt-2" onclick="window.location.reload()">
										Try again
									</button>
								</div>
							`;
						}
					}

				} catch (error) {
					console.error('Error loading post details:', error);
					modalBody.innerHTML = `
						<div class="alert alert-danger">
							<i class="ti-alert-circle me-2"></i>
							Error loading post details. Please try again later.
							<br><br>
							<small class="text-muted">Error: ${error.message}</small>
						</div>
					`;
				}
			}

			// Hàm hiển thị post từ API data theo cấu trúc mới
			function displayPostFromAPI(post) {
				const modalBody = document.getElementById('postModalBody');

				// Xử lý thông tin user từ cấu trúc API mới
				const userAvatar = post.avatar+"?"+"sp=r&st=2025-05-28T06:11:09Z&se=2026-01-01T14:11:09Z&spr=https&sv=2024-11-04&sr=c&sig=YdDYGbzpNp4XPSKVVDM0bb411XOEPgA8b0i2PFCfc1c%3D" || 'images/resources/friend-avatar9.jpg';
				const userFirstName = post.firstName || '';
				const userLastName = post.lastName || '';
				const displayName = `${userFirstName} ${userLastName}`.trim() || 'Anonymous User';

				// Xử lý thời gian
				const createDate = post.createAt || new Date().toISOString();
				const formattedDate = new Date(createDate).toLocaleDateString('vi-VN');
				const formattedTime = new Date(createDate).toLocaleTimeString('vi-VN', {hour: '2-digit', minute: '2-digit'});

				// Xử lý category
				const categoryHtml = post.categoryName ?
									`<div class="mb-2"><span class="badge bg-primary text-white px-2 py-1 rounded-pill">#${post.categoryName}</span></div>` :
									'';

				// Xử lý files/media
				let mediaHtml = '';
				if (post.postFiles && post.postFiles.length > 0) {
					mediaHtml = post.postFiles.map(file => {
						const fileType = file.postFileType || file.fileType || '';
						const fileUrl = file.fileUrl || file.url || '';

						if (fileType.toLowerCase().includes('image') || fileUrl.match(/\.(jpg|jpeg|png|gif|webp)$/i)) {
							return `<img src="${fileUrl}?sp=r&st=2025-05-28T06:11:09Z&se=2026-01-01T14:11:09Z&spr=https&sv=2024-11-04&sr=c&sig=YdDYGbzpNp4XPSKVVDM0bb411XOEPgA8b0i2PFCfc1c%3D" alt="Post Image" class="img-fluid mb-3" style="max-width: 100%; height: auto;">`;
						} else if (fileType.toLowerCase().includes('video') || fileUrl.match(/\.(mp4|webm|ogg)$/i)) {
							return `<video width="100%" controls class="mb-3">
										<source src="${fileUrl}?sp=r&st=2025-05-28T06:11:09Z&se=2026-01-01T14:11:09Z&spr=https&sv=2024-11-04&sr=c&sig=YdDYGbzpNp4XPSKVVDM0bb411XOEPgA8b0i2PFCfc1c%3D" type="video/mp4">
										Your browser does not support the video tag.
									</video>`;
						} else {
							return `<a href="${fileUrl}?sp=r&st=2025-05-28T06:11:09Z&se=2026-01-01T14:11:09Z&spr=https&sv=2024-11-04&sr=c&sig=YdDYGbzpNp4XPSKVVDM0bb411XOEPgA8b0i2PFCfc1c%3D" target="_blank" class="btn btn-outline-primary btn-sm mb-2">
										<i class="ti-download me-1"></i>Download File
									</a>`;
						}
					}).join('');
				}

				// Xử lý comments theo cấu trúc mới
				let commentsHtml = '';
				if (post.comments && post.comments.length > 0) {
					// Lọc comments chính (không có parentCommentId)
					const parentComments = post.comments.filter(c => !c.parentCommentId);

					commentsHtml = parentComments.map(comment => {
						// Tìm replies cho comment này
						const replies = post.comments.filter(r => r.parentCommentId === comment.commentId);

						const commentUserAvatar = comment.avatar+"?"+"sp=r&st=2025-05-28T06:11:09Z&se=2026-01-01T14:11:09Z&spr=https&sv=2024-11-04&sr=c&sig=YdDYGbzpNp4XPSKVVDM0bb411XOEPgA8b0i2PFCfc1c%3D" || 'images/resources/friend-avatar9.jpg';
						const commentUserName = `${comment.firstName || ''} ${comment.lastName || ''}`.trim() || 'Anonymous';

						let repliesHtml = '';
						if (replies.length > 0) {
							repliesHtml = replies.map(reply => {
								const replyUserAvatar = reply.avatar+"?"+"sp=r&st=2025-05-28T06:11:09Z&se=2026-01-01T14:11:09Z&spr=https&sv=2024-11-04&sr=c&sig=YdDYGbzpNp4XPSKVVDM0bb411XOEPgA8b0i2PFCfc1c%3D" || 'images/resources/friend-avatar9.jpg';
								const replyUserName = `${reply.firstName || ''} ${reply.lastName || ''}`.trim() || 'Anonymous';

								return `
									<div class="comment-reply ms-4 mt-2">
										<div class="d-flex">
											<div class="comet-avatar me-2">
												<img src="${replyUserAvatar}" alt="User Avatar" style="width: 30px; height: 30px; border-radius: 50%; object-fit: cover;">
											</div>
											<div class="we-comment flex-grow-1">
												<div class="coment-head">
													<h6 class="mb-1"><a href="#" class="text-decoration-none">${replyUserName}</a></h6>
												</div>
												<p class="mb-1">${reply.content || ''}</p>
											</div>
										</div>
									</div>
								`;
							}).join('');
						}

						return `
							<div class="comment mb-3">
								<div class="d-flex">
									<div class="comet-avatar me-2">
										<img src="${commentUserAvatar}" alt="User Avatar" style="width: 40px; height: 40px; border-radius: 50%; object-fit: cover;">
									</div>
									<div class="we-comment flex-grow-1">
										<div class="coment-head">
											<h5 class="mb-1"><a href="#" class="text-decoration-none">${commentUserName}</a></h5>
										</div>
										<p class="mb-2">${comment.content || ''}</p>
										${repliesHtml}
									</div>
								</div>
							</div>
						`;
					}).join('');
				} else {
					commentsHtml = '<p class="text-muted">No comments yet.</p>';
				}

				let postHtml = `
					<div class="card border-0">
						<div class="friend-info">
							<div class="d-flex mb-3">
								<figure class="me-3">
									<img src="${userAvatar}" alt="User Avatar" style="width: 50px; height: 50px; border-radius: 50%; object-fit: cover;">
								</figure>

								<div class="flex-grow-1">
									<div class="friend-name">
										<ins>
											<a href="#" class="text-decoration-none fw-bold">${displayName}</a>
										</ins>
										<div>
											<span class="text-muted small">${formattedDate} ${formattedTime}</span>
										</div>
									</div>
								</div>
							</div>

							<div class="post-meta">
								${categoryHtml}
								<h4 class="mb-3" style="color: #333; font-weight: 600;">
									${post.title || 'Untitled Post'}
								</h4>

								${mediaHtml}

								<div class="description">
									<div style="white-space: pre-line; line-height: 1.6;">
										${post.content || 'No content available'}
									</div>
								</div>
							</div>

							<hr>

							<div class="comments-section mt-4">
								<h6 class="mb-3">
									<i class="ti-comment me-1"></i>
									Comments (${post.comments ? post.comments.filter(c => !c.parentCommentId).length : 0})
								</h6>
								<div class="comments-list">
									${commentsHtml}
								</div>
							</div>
						</div>
					</div>
				`;

				modalBody.innerHTML = postHtml;
			}

			// Event listeners
			searchBtn.addEventListener("click", () => doSearch(false));
			searchInput.addEventListener("keyup", function (e) {
				if (e.key === "Enter") doSearch(false);
			});

			// Suggestion khi gõ với debounce
			searchInput.addEventListener("input", function () {
				clearTimeout(debounceTimer);
				debounceTimer = setTimeout(() => {
					doSearch(true);
				}, 300);
			});
		});
	</script>
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>