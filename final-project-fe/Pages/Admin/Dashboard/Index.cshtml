@page
@model final_project_fe.Pages.Admin.Dashboard.IndexModel
@{
    ViewData["ActivePage"] = "Dashboard";
}

<div class="page-header">
    <h3 class="fw-bold mb-3">Dashboard</h3>
    <ul class="breadcrumbs mb-3">
        <li class="nav-home">
            <a asp-page="/Admin/Dashboard/Index">
                <i class="icon-home"></i>
            </a>
        </li>
    </ul>
</div>

<div class="row">
    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-primary bubble-shadow-small" style="background: #fdaf4b">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">Users</p>
                            <h4 class="card-title">@Model.TotalUsers</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-info bubble-shadow-small" style="background: #f3545d">
                            <i class="fas fa-user-check"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">Memberships</p>
                            <h4 class="card-title">576</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-success bubble-shadow-small">
                            <i class="fas fa-luggage-cart"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">Sales</p>
                            <h4 class="card-title">$ 1,345</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-secondary bubble-shadow-small" style="background: #177dff">
                            <i class="fas fa-clipboard"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">Articles</p>
                            <h4 class="card-title">@Model.TotalArticles</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-8">
        <div class="card card-round">
            <div class="card-header">
                <div class="card-head-row">
                    <div class="card-title">User Statistics</div>
                </div>
            </div>
            <div class="card-body">
                <div class="chart-container" style="min-height: 375px">
                    <canvas id="statisticsChart"></canvas>
                </div>
                <div id="myChartLegend"></div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card card-primary card-round">
            <div class="card-header">
                <div class="card-head-row">
                    <div class="card-title">Daily Sales</div>
                </div>
                <div class="card-category">@Model.SalesPeriod</div>
            </div>
            <div class="card-body pb-0">
                <div class="mb-4 mt-2">
                    <h1>$@Model.TotalSales.ToString("N2")</h1>
                </div>
                <div class="pull-in">
                    <canvas id="dailySalesChart" height="200"></canvas>
                </div>
            </div>
        </div>
    </div>
    @section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var ctx = document.getElementById('statisticsChart').getContext('2d');

                // You can pass data from your model like this:
                var chartData = {
                    labels: @Html.Raw(Json.Serialize(Model.ChartLabels)), // Example: ["Jan", "Feb", "Mar"]
                    datasets: [
                        {
                            label: "Memberships",
                            borderColor: '#f3545d',
                            pointBackgroundColor: 'rgba(243, 84, 93, 0.6)',
                            pointRadius: 0,
                            backgroundColor: 'rgba(243, 84, 93, 0.4)',
                            legendColor: '#f3545d',
                            fill: true,
                            borderWidth: 2,
                            data: @Html.Raw(Json.Serialize(Model.MembershipsData)) // Example: [154, 184, 175]
                                },
                        {
                            label: "Users",
                            borderColor: '#fdaf4b',
                            pointBackgroundColor: 'rgba(253, 175, 75, 0.6)',
                            pointRadius: 0,
                            backgroundColor: 'rgba(253, 175, 75, 0.4)',
                            legendColor: '#fdaf4b',
                            fill: true,
                            borderWidth: 2,
                            data: @Html.Raw(Json.Serialize(Model.UsersData)) // Example: [256, 230, 245]
                                },
                        {
                            label: "Articles",
                            borderColor: '#177dff',
                            pointBackgroundColor: 'rgba(23, 125, 255, 0.6)',
                            pointRadius: 0,
                            backgroundColor: 'rgba(23, 125, 255, 0.4)',
                            legendColor: '#177dff',
                            fill: true,
                            borderWidth: 2,
                            data: @Html.Raw(Json.Serialize(Model.ArticlesData))
                                }
                    ]
                };

                var statisticsChart = new Chart(ctx, {
                    type: 'line',
                    data: chartData,
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        legend: {
                            display: false
                        },
                        tooltips: {
                            bodySpacing: 4,
                            mode: "nearest",
                            intersect: 0,
                            position: "nearest",
                            xPadding: 10,
                            yPadding: 10,
                            caretPadding: 10
                        },
                        layout: {
                            padding: { left: 5, right: 5, top: 15, bottom: 15 }
                        },
                        scales: {
                            yAxes: [{
                                ticks: {
                                    fontStyle: "500",
                                    beginAtZero: false,
                                    maxTicksLimit: 5,
                                    padding: 10
                                },
                                gridLines: {
                                    drawTicks: false,
                                    display: false
                                }
                            }],
                            xAxes: [{
                                gridLines: {
                                    zeroLineColor: "transparent"
                                },
                                ticks: {
                                    padding: 10,
                                    fontStyle: "500"
                                }
                            }]
                        },
                        legendCallback: function (chart) {
                            var text = [];
                            text.push('<ul class="' + chart.id + '-legend html-legend">');
                            for (var i = 0; i < chart.data.datasets.length; i++) {
                                text.push('<li><span style="background-color:' + chart.data.datasets[i].legendColor + '"></span>');
                                if (chart.data.datasets[i].label) {
                                    text.push(chart.data.datasets[i].label);
                                }
                                text.push('</li>');
                            }
                            text.push('</ul>');
                            return text.join('');
                        }
                    }
                });

                var myLegendContainer = document.getElementById("myChartLegend");
                myLegendContainer.innerHTML = statisticsChart.generateLegend();

                // bind onClick event to all LI-tags of the legend
                var legendItems = myLegendContainer.getElementsByTagName('li');
                for (var i = 0; i < legendItems.length; i += 1) {
                    legendItems[i].addEventListener("click", legendClickCallback, false);
                }

                function legendClickCallback(event) {
                    event = event || window.event;
                    var target = event.target || event.srcElement;
                    while (target.nodeName !== 'LI') {
                        target = target.parentElement;
                    }
                    var parent = target.parentElement;
                    var chartId = parseInt(parent.classList[0].split("-")[0], 10);
                    var chart = Chart.instances[chartId];
                    var index = Array.prototype.slice.call(parent.children).indexOf(target);
                    chart.getDatasetMeta(index).hidden = chart.getDatasetMeta(index).hidden === null ? !chart.data.datasets[index].hidden : null;
                    chart.update();
                }
            });

        // Daily Sales Chart
        var dailySalesCtx = document.getElementById('dailySalesChart').getContext('2d');
        var myDailySalesChart = new Chart(dailySalesCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.DailySalesLabels)),
                datasets: [{
                    label: "Sales Analytics",
                    fill: true,
                    backgroundColor: "rgba(255,255,255,0.2)",
                    borderColor: "#fff",
                    borderCapStyle: "butt",
                    borderDash: [],
                    borderDashOffset: 0,
                    pointBorderColor: "#fff",
                    pointBackgroundColor: "#fff",
                    pointBorderWidth: 1,
                    pointHoverRadius: 5,
                    pointHoverBackgroundColor: "#fff",
                    pointHoverBorderColor: "#fff",
                    pointHoverBorderWidth: 1,
                    pointRadius: 1,
                    pointHitRadius: 5,
                    data: @Html.Raw(Json.Serialize(Model.DailySalesData))
                }]
            },
            options: {
                maintainAspectRatio: false,
                legend: {
                    display: false
                },
                animation: {
                    easing: "easeInOutBack"
                },
                scales: {
                    yAxes: [{
                        display: false,
                        ticks: {
                            fontColor: "rgba(0,0,0,0.5)",
                            fontStyle: "bold",
                            beginAtZero: true,
                            maxTicksLimit: 10,
                            padding: 0
                        },
                        gridLines: {
                            drawTicks: false,
                            display: false
                        }
                    }],
                    xAxes: [{
                        display: false,
                        gridLines: {
                            zeroLineColor: "transparent"
                        },
                        ticks: {
                            padding: -20,
                            fontColor: "rgba(255,255,255,0.2)",
                            fontStyle: "bold"
                        }
                    }]
                }
            }
        });
        </script>
    }
</div>