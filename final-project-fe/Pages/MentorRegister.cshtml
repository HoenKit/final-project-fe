@page
@model final_project_fe.Pages.MentorRegisterModel
@{
}
    <h2 class="form-title"> Mentor Registration Form</h2>

    <form method="post" enctype="multipart/form-data" id="mentorForm">
        <!-- SECTION 1: Auto-fill Fields from QR -->
        <div style="border: 1px solid #bfe2ff; border-radius: 10px; padding: 20px; margin-bottom: 30px; background-color: #f2f9ff;">
            <h4 style="color: #007bff;">📄  Citizen Identification Card</h4>
            <p style="font-size: 14px; color: #555;">The following fields can be automatically filled by scanning your Citizen ID QR.</p>

            <label>First Name:</label>
            <input asp-for="Mentor.FirstName" type="text" />
            <small style="color: gray;">Family name extracted .</small>

            <label>Last Name:</label>
            <input asp-for="Mentor.LastName" type="text" />
            <small style="color: gray;">Given name extracted .</small>

            <label>Citizen ID:</label>
            <input asp-for="Mentor.CitizenID" type="text" readonly style="background-color: #f5f5f5;" />
            <small style="color: gray;">Personal identification number, is a unique 12-digit number assigned to each citizen. Please</small>

            <label>Date of Issue:</label>
            <input asp-for="Mentor.IssueDate" type="date" />
            <small style="color: gray;">When the CCCD was issued.</small>

            <label>Expiration Date:</label>
            <input asp-for="Mentor.ExpiredDate" type="date" />
            <small style="color: gray;">Leave blank if your CCCD has no expiration date.</small>

            <label>Issued Place:</label>
            <input asp-for="Mentor.IssuePlace" type="text" />
            <small style="color: gray;">Authority or location where the CCCD was issued.</small>

            <button type="button" onclick="showPopup()">📷 Information Citizen Identification Card from QR code</button>
        </div>

        <!-- SECTION 2: Manual Entry -->
        <div style="border: 1px solid #e0e0e0; border-radius: 10px; padding: 20px; background-color: #ffffff;">
            <h4 style="color: #007bff;">✍️ Manual Information Entry</h4>

            <label>Introduction:</label>
            <textarea asp-for="Mentor.Introduction" rows="4" style="width: 100%; padding: 10px; border-radius: 8px; border: 1px solid #ccc;"></textarea>
            <small style="color: gray;">Brief introduction about your mentoring experience (skills, background, goals).</small>

            <label>Job Title:</label>
            <input asp-for="Mentor.JobTitle" type="text" />
            <small style="color: gray;">E.g., Software Engineer, Business Consultant, etc.</small>

            <label>Education Level:</label>
            <select asp-for="Mentor.StudyLevel">
                <option value="">-- Select your education level --</option>
                <option>Intermediate Vocational Education</option>
                <option>College / Associate Degree</option>
                <option>Bachelor's Degree</option>
                <option>University</option>
                <option>Professor</option>
                <option>Postgraduate – Master's, PhD</option>
                <option>Other</option>
            </select>
            <small style="color: gray;">Please select the highest level of education you have attained.</small>

            <label>✍️ Digital Signature (Draw):</label><br />
            <canvas id="signatureCanvas" width="300" height="150"></canvas><br />
            <small style="color: gray;">Your signature, we will use it for issuing online certificates to your learners.</small>
            <button type="button" onclick="clearSignature()">🧹 Clear</button>
            <button type="button" onclick="convertSignatureToFile()">💾 Save Signature</button>
            <input type="file" name="Mentor.Signature" id="signatureFile" style="display:none" />
        </div>

        <br>
        <button type="submit">✅ Submit Registration</button>
    </form>

    <div id="qrPopup" class="popup">
    <h3 style="text-align:center; color:#007bff;">📷 Scan Citizen ID (QR)</h3>

        <p><strong>How to get the QR code:</strong></p>
        <ol style="margin-left: 15px; font-size: 14px;">
            <li>
                Method 1: Use the QR code on the <strong>front side</strong> of your physical Citizen ID (CCCD).
                <br />
                <img src="https://i.postimg.cc/sg1Pmbxg/The-CCCD-hd.png"
                     alt="QR on physical ID" style="max-width: 100%; border-radius: 8px; margin-top: 10px;" />
            </li>
            <li>
                Method 2: Open the <strong>VNeID app</strong> and go to <em>“QR code / CCCD Card”</em> section to get the digital QR.
                <br />
                <img src="https://i.postimg.cc/GmpKNH7r/VNeId-hd.png"
                     alt="QR on VNeID app" style="max-width: 100%; border-radius: 8px; margin-top: 10px;" />
            </li>
        </ol>

        <label for="qrImage">Select ID Image (with QR):</label>
        <input type="file" id="qrImage" accept="image/*" />

        <br><br>
        <button type="button" onclick="scanQRCode()">📤 Input Information</button>
        <button type="button" onclick="closePopup()">❌ Close</button>
    </div>

<script>
    let signaturePad;

    document.addEventListener("DOMContentLoaded", function () {
        // QR popup functions
        window.showPopup = function () {
            document.getElementById('qrPopup').style.display = 'block';
        };

        window.closePopup = function () {
            document.getElementById('qrPopup').style.display = 'none';
        };

        window.scanQRCode = async function () {
            const fileInput = document.getElementById("qrImage");
            const file = fileInput.files[0];
            if (!file) return alert("Please select an image of the ID");

            const img = new Image();
            img.onload = () => {
                const canvas = document.createElement("canvas");
                canvas.width = img.width;
                canvas.height = img.height;
                const ctx = canvas.getContext("2d");
                ctx.drawImage(img, 0, 0);
                const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
                const code = jsQR(imageData.data, canvas.width, canvas.height);
                if (code) {
                    const [citizenId, , fullName, , , , issueDateStr] = code.data.split("|");
                    const nameParts = fullName.trim().split(" ");
                    const lastName = nameParts.pop();
                    const firstName = nameParts.join(" ");
                    const formattedDate = issueDateStr.replace(/(..)(..)(....)/, "$3-$2-$1");

                    document.querySelector('[name="Mentor.FirstName"]').value = firstName;
                    document.querySelector('[name="Mentor.LastName"]').value = lastName;
                    document.querySelector('[name="Mentor.CitizenID"]').value = citizenId;
                    document.querySelector('[name="Mentor.IssueDate"]').value = formattedDate;

                    closePopup();
                } else {
                    alert("❌ QR code not detected");
                }
            };

            const reader = new FileReader();
            reader.onload = e => {
                img.src = e.target.result;
            };
            reader.readAsDataURL(file);
        };

        // Initialize signature pad
        const canvas = document.getElementById('signatureCanvas');
        signaturePad = new SignaturePad(canvas);

        // Signature actions
        window.clearSignature = function () {
            if (signaturePad) signaturePad.clear();
        };

        window.convertSignatureToFile = function () {
            if (signaturePad.isEmpty()) {
                alert("You have not signed yet!");
                return;
            }

            canvas.toBlob(function (blob) {
                const uniqueFileName = `signature_${Date.now()}.png`;
                const file = new File([blob], uniqueFileName, { type: "image/png" });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                document.getElementById("signatureFile").files = dataTransfer.files;

                alert("✅ Signature saved.");
            }, "image/png");
        };

        // Ensure signature is saved before submit
        const form = document.getElementById("mentorForm");
        form.addEventListener("submit", function (e) {
            const signatureInput = document.getElementById("signatureFile");
            if (!signatureInput.files.length && !signaturePad.isEmpty()) {
                e.preventDefault();
                convertSignatureToFile();
                setTimeout(() => form.submit(), 300); // allow time for file to be set
            }
        });
    });
</script>
    <script src="https://unpkg.com/jsqr/dist/jsQR.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/signature_pad@4.0.0/dist/signature_pad.umd.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background-color: #f9faff;
            color: #333;
        }

    select {
        width: 100%;
        padding: 10px;
        margin-top: 6px;
        margin-bottom: 16px;
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: white;
        appearance: auto; /* hiện thị native UI */
    }
        h2 {
            color: #007bff;
            margin-bottom: 20px;
        }

        form {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
            padding: 30px;
            max-width: 700px;
            margin: auto;
        }

        label {
            font-weight: 600;
            margin-top: 12px;
            display: block;
        }

        input[type="text"],
        input[type="date"],
        input[type="file"] {
            width: 100%;
            padding: 10px;
            margin-top: 6px;
            margin-bottom: 16px;
            border: 1px solid #ccc;
            border-radius: 8px;
        }

        button {
            background-color: #007bff;
            border: none;
            color: white;
            padding: 10px 18px;
            border-radius: 8px;
            cursor: pointer;
            margin-right: 10px;
        }

            button:hover {
                background-color: #0056b3;
            }

        canvas {
            border: 1px solid #ccc;
            border-radius: 6px;
        }

    .popup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        width: 90%;
        max-width: 500px; /* không quá rộng */
        padding: 20px;
        border: 1px solid #aaa;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.15);
        display: none;
        z-index: 1000;
        overflow-y: auto;
        max-height: 90vh; /* nếu quá nhiều nội dung thì sẽ scroll */
    }


        .form-title {
            text-align: center;
            font-size: 32px;
            font-weight: 700;
            background: linear-gradient(to right, #007bff, #00c6ff);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
    </style>

