@page
@model final_project_fe.Pages.Mentor.MentorPage.DashboardModel
@{
    Layout = "/Pages/Mentor/Shared/_MentorLayout2.cshtml";
    ViewData["Title"] = "Phronesis - Mentor Dashboard";
}
<head>
    <!-- ========== All CSS files linkup ========= -->
    <link rel="stylesheet" href=@Url.Content("~/MentorAssets/css/bootstrap.min.css") />
    <link rel="stylesheet" href=@Url.Content("~/MentorAssets/css/lineicons.css") rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href=@Url.Content("~/MentorAssets/css/materialdesignicons.min.css") rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href=@Url.Content("~/MentorAssets/css/fullcalendar.css") />
    <link rel="stylesheet" href=@Url.Content("~/MentorAssets/css/fullcalendar.css") />
    <link rel="stylesheet" href=@Url.Content("~/MentorAssets/css/main.css") />
    <title>Dashboard</title>
</head>

<!-- ========== section start ========== -->
<section class="section">
    <div class="container-fluid">
        <!-- ========== title-wrapper start ========== -->
        <div class="title-wrapper pt-30">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <div class="title">
                        <h2>Dashboard</h2>
                    </div>
                </div>
                <!-- end col -->
                <div class="col-md-6">
                    <div class="breadcrumb-wrapper">
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="/Index">Home</a>
                                </li>
                                <li class="breadcrumb-item active" aria-current="page">
                                    Dashboard
                                </li>
                            </ol>
                        </nav>
                    </div>
                </div>
                <!-- end col -->
            </div>
            <!-- end row -->
        </div>
        <!-- ========== title-wrapper end ========== -->
        <div class="row">
            <div class="col-xl-3 col-lg-4 col-sm-6">
                <div class="icon-card mb-30">
                    <div class="icon purple">
                        <i class="lni lni-library"></i>
                    </div>
                    <div class="content">
                        <h6 class="mb-10">Monthly Courses</h6>
                        <h3 class="text-bold mb-10">@Model.TotalCourse</h3>
                    </div>
                </div>
            </div>
            <!-- End Col -->
            <div class="col-xl-3 col-lg-4 col-sm-6">
                <div class="icon-card mb-30">
                    <div class="icon success">
                        <i class="lni lni-dollar"></i>
                    </div>
                    <div class="content">
                        <h6 class="mb-10">Monthly Income</h6>
                        <h3 class="text-bold mb-10">@Model.TotalIncome.ToString("N0") VNĐ </h3>
                    </div>
                </div>
            </div>
            <!-- End Col -->
            <div class="col-xl-3 col-lg-4 col-sm-6">
                <div class="icon-card mb-30">
                    <div class="icon primary">
                        <i class="lni lni-credit-cards"></i>
                    </div>
                    <div class="content">
                        <h6 class="mb-10">Monthly Withdrawal</h6>
                        <h3 class="text-bold mb-10">@((Model.Withdraw.Items.Sum(w => w.Points) * 1000).ToString("N0")) VNĐ</h3>
                    </div>
                </div>
            </div>
            <!-- End Col -->
            <div class="col-xl-3 col-lg-4 col-sm-6">
                <div class="icon-card mb-30">
                    <div class="icon orange">
                        <i class="lni lni-user"></i>
                    </div>
                    <div class="content">
                        <h6 class="mb-10">Monthly Students</h6>
                        <h3 class="text-bold mb-10">@Model.TotalStudent</h3>
                    </div>
                </div>
            </div>
            <!-- End Col -->
        </div>
        <!-- End Row -->
        <div class="row">
            <div class="col-lg-7">
                <div class="card-style mb-30">
                    <div class="title d-flex flex-wrap justify-content-between">
                        <div class="left">
                            <h6 class="text-medium mb-10">Yearly Income</h6>
                            <h3 class="text-bold">@Model.Payments.Sum().ToString("N0") VNĐ</h3>
                        </div>
                        <div class="right">
                            <div class="select-style-1">
                            </div>
                            <!-- end select -->
                        </div>
                    </div>
                    <!-- End Title -->
                    <div class="chart">
                        <canvas id="Chart1" style="width: 100%; height: 400px; margin-left: -35px;"></canvas>
                    </div>
                    <!-- End Chart -->
                </div>
            </div>
            <!-- End Col -->
            <div class="col-lg-5">
                <div class="card-style mb-30">
                    <div class="title d-flex flex-wrap align-items-center justify-content-between">
                        <div class="left">
                            <h6 class="text-medium mb-30">New student</h6>
                        </div>
                        <div class="right">
                            <div class="select-style-1">
                            </div>
                            <!-- end select -->
                        </div>
                    </div>
                    <!-- End Title -->
                    <div class="chart">
                        <canvas id="Chart2" style="width: 100%; height: 400px; margin-left: -45px;"></canvas>
                    </div>
                    <!-- End Chart -->
                </div>
            </div>
            <!-- End Col -->
        </div>
        <!-- End Row -->
    </div>
    <!-- end container -->
</section>
<!-- ========== section end ========== -->
<!-- ========= All Javascript files linkup ======== -->
<script src=@Url.Content("~/MentorAssets/js/Chart.min.js")></script>
<script src=@Url.Content("~/MentorAssets/js/dynamic-pie-chart.js")></script>
<script src=@Url.Content("~/MentorAssets/js/moment.min.js")></script>
<script src=@Url.Content("~/MentorAssets/js/fullcalendar.js")></script>
<script src=@Url.Content("~/MentorAssets/js/jvectormap.min.js")></script>
<script src=@Url.Content("~/MentorAssets/js/world-merc.js")></script>
<script src=@Url.Content("~/MentorAssets/js/polyfill.js")></script>
<script>

    // =========== chart one start
    const ctx1 = document.getElementById("Chart1").getContext("2d");
    const chart1 = new Chart(ctx1, {
        type: "line",
        data: {
            labels: [
                "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
            ],
            datasets: [
                {
                    label: "Income",
                    backgroundColor: "transparent",
                    borderColor: "#365CF5",
                    data: @Json.Serialize(Model.Payments),
                    pointBackgroundColor: "transparent",
                    pointHoverBackgroundColor: "#365CF5",
                    pointBorderColor: "transparent",
                    pointHoverBorderColor: "#fff",
                    pointHoverBorderWidth: 5,
                    borderWidth: 5,
                    pointRadius: 8,
                    pointHoverRadius: 8,
                    cubicInterpolationMode: "monotone",
                },
            ],
        },
        options: {
            plugins: {
                tooltip: {
                    bodyColor: '#000000',
                    titleColor: '#000000',
                    callbacks: {
                        label: function (context) {
                            return context.parsed.y.toFixed(2) + ' VNĐ';
                        }
                    },
                    intersect: false,
                    backgroundColor: "#f9f9f9",
                    title: {
                        fontFamily: "Plus Jakarta Sans",
                        color: "#8F92A1",
                        fontSize: 12,
                    },
                    body: {
                        fontFamily: "Plus Jakarta Sans",
                        color: "#171717",
                        fontStyle: "bold",
                        fontSize: 16,
                    },
                    displayColors: false,
                    padding: {
                        x: 30,
                        y: 10,
                    },
                },
                legend: {
                    display: false,
                },
            },
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    grid: {
                        display: false,
                        drawTicks: false,
                        drawBorder: false,
                    },
                    ticks: {
                        color: '#000000',
                        padding: 35,
                        callback: function (value) {
                            return value + ' VNĐ';
                        }
                    },
                },
                x: {
                    grid: {
                        drawBorder: false,
                        color: "rgba(143, 146, 161, .1)",
                        zeroLineColor: "rgba(143, 146, 161, .1)",
                    },
                    ticks: {
                        color: '#000000',
                        padding: 20,
                    },
                },
            },
        },
    });
    // =========== chart one end

    // =========== chart two start
    const ctx2 = document.getElementById("Chart2").getContext("2d");
    const chart2 = new Chart(ctx2, {
        type: "bar",
        data: {
            labels: [
                "Jan", "Feb", "Mar", "Apr", "May", "Jun",
                "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
            ],
            datasets: [
                {
                    label: "Students",
                    backgroundColor: "#365CF5",
                    borderRadius: 30,
                    barThickness: 6,
                    maxBarThickness: 8,
                    data: @Json.Serialize(Model.Courses),
                },
            ],
        },
        options: {
            plugins: {
                tooltip: {
                    bodyColor: '#000000',
                    titleColor: '#000000',
                    callbacks: {
                        label: function (context) {
                            return context.parsed.y + ' students';
                        }
                    },
                    backgroundColor: "#F3F6F8",
                    titleAlign: "center",
                    bodyAlign: "center",
                    titleFont: {
                        size: 12,
                        weight: "bold",
                        color: "#8F92A1",
                    },
                    bodyFont: {
                        size: 16,
                        weight: "bold",
                        color: "#171717",
                    },
                    displayColors: false,
                    padding: {
                        x: 30,
                        y: 10,
                    },
                },
                legend: {
                    display: false,
                },
            },
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    grid: {
                        display: false,
                        drawTicks: false,
                        drawBorder: false,
                    },
                    ticks: {
                        color: '#000000',
                        padding: 35,
                        precision: 0
                    },
                },
                x: {
                    grid: {
                        display: false,
                        drawBorder: false,
                        color: "rgba(143, 146, 161, .1)",
                        drawTicks: false,
                        zeroLineColor: "rgba(143, 146, 161, .1)",
                    },
                    ticks: {
                        color: '#000000',
                        padding: 20,
                    },
                },
            },
        },
    });
    // =========== chart two end
</script>