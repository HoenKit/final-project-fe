@page
@using System.Text.Encodings.Web
@model final_project_fe.Pages.Mentor.MentorPage.EditCourseModel
@{
    ViewData["Title"] = "Phronesis - Edit Course";
}
<div class="theme-layout">
    <!-- Header Section -->
    <section>
        <div class="ext-gap bluesh high-opacity">
            <div class="content-bg-wrap" style="background: url('@Url.Content("~/images/resources/animated-bg2.png")')"></div>
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="top-banner">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <a href="/Mentor/MentorPage/MyCourses" class="btn btn-outline-light btn-sm">
                                        <i class="fa fa-arrow-left"></i> Back to courses
                                    </a>
                                </div>
                                <div class="d-flex align-items-center">
                                    <div class="dropdown">
                                        <button class="btn btn-outline-light" type="button" data-bs-toggle="dropdown">
                                            <i class="fa fa-cog"></i>
                                        </button>
                                        <ul class="dropdown-menu">
                                            <li><a class="dropdown-item" href="#" onclick="submitDeleteForm()">Delete Course</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <h1 class="mt-3">@Model.Course.CourseName</h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Main Content -->
    <section>
        <div style="padding-top:5%; padding-bottom: 5%;" class="gap100">
            <div class="container-fluid">
                <div class="row">
                    <!-- Sidebar -->
                    <div class="col-lg-3">
                        <div class="course-sidebar">
                            <h5>Plan your course</h5>
                            <ul class="nav nav-pills flex-column">
                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="course-info">
                                        <span class="step-number" data-step="1">
                                            @if (!string.IsNullOrEmpty(Model.Course.CourseName))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>1</span>
                                            }
                                        </span>
                                        Course Information
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="category-description">
                                        <span class="step-number" data-step="2">
                                            @if (Model.Course.CategoryId > 0 && !string.IsNullOrEmpty(Model.Course.CourseContent))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>2</span>
                                            }
                                        </span>
                                        Category & Description
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="skill-learn">
                                        <span class="step-number" data-step="3">
                                            @if (!string.IsNullOrEmpty(Model.Course.SkillLearn))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>3</span>
                                            }
                                        </span>
                                        Skill Learn
                                    </a>
                                </li>

                            </ul>

                            <h5 class="mt-4">Create your content</h5>
                            <ul class="nav nav-pills flex-column">
                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="pricing-duration">
                                        <span class="step-number" data-step="4">
                                            @if (Model.Course.CourseLength.HasValue && Model.Course.CourseLength.Value > 0)
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>4</span>
                                            }
                                        </span>
                                        Pricing & Duration
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="course-image">
                                        <span class="step-number" data-step="5">
                                            @if (!string.IsNullOrEmpty(Model.Course.CoursesImage))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>5</span>
                                            }
                                        </span>
                                        Course Image
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="requirement">
                                        <span class="step-number" data-step="6">
                                            @if (!string.IsNullOrEmpty(Model.Course.Requirement))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>6</span>
                                            }
                                        </span>
                                        Requirement
                                    </a>
                                </li>

                                @*  <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="language">
                                        <span class="step-number" data-step="9">
                                            @if (!string.IsNullOrEmpty(Model.Course.Language))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>9</span>
                                            }
                                        </span>
                                        Language
                                    </a>
                                </li> *@
                            </ul>

                            <h5 class="mt-4">Publish your course</h5>
                            <ul class="nav nav-pills flex-column">

                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="level-language">
                                        <span class="step-number" data-step="7">
                                            @if (!string.IsNullOrEmpty(Model.Course.Level) && !string.IsNullOrEmpty(Model.Course.Language))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>7</span>
                                            }
                                        </span>
                                        Level & Language
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="intended-learners">
                                        <span class="step-number" data-step="8">
                                            @if (!string.IsNullOrEmpty(Model.Course.IntendedLearner))
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>8</span>
                                            }
                                        </span>
                                        Intended Learners
                                    </a>
                                </li>

                                <li class="nav-item">
                                    <a class="nav-link step-link" href="#" data-step="curriculum">
                                        <span class="step-number" data-step="9">
                                            @if (Model.Modules != null && Model.Modules.Any())
                                            {
                                                <i class="fa fa-check"></i>
                                            }
                                            else
                                            {
                                                <span>9</span>
                                            }
                                        </span>
                                        Curriculum
                                    </a>
                                </li>
                            </ul>

                            <div class="mt-4">
                                <button type="submit" form="editCourseForm" class="btn btn-primary w-100">Submit for Review</button>
                            </div>
                            @*  <button type="submit" class="btn btn-success" form="editCourseForm">
                                <i class="fa fa-check"></i> Complete Setup
                            </button> *@
                        </div>
                    </div>

                    <!-- Main Form -->
                    <div class="col-lg-9">
                        <div class="course-content">
                            @* <partial name="_Notification" /> *@

                            <!-- Hidden Delete Form -->
                            <form id="deleteCourseForm" method="post" asp-page-handler="ToggleDeleteCourse" style="display: none;">
                                <input type="hidden" name="id" value="@Model.Course.CourseId" />
                            </form>

                            <form id="editCourseForm" method="post" enctype="multipart/form-data">
                                <input type="hidden" asp-for="Course.CourseId" value="@Model.Course.CourseId" />

                                <!-- Step 1: Course Information -->
                                <div id="course-info" class="content-section">
                                    <div class="step-header">
                                        <h2><span class="step-badge">1</span> Course Information</h2>
                                        <p class="step-description">
                                            Start by setting up your course name. This will be the main title that students see when browsing courses.
                                            Choose a clear, descriptive name that accurately represents what your course teaches.
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <div class="form-group mb-3">
                                            <label class="form-label"><strong>Course Name:</strong></label>
                                            <input asp-for="Course.CourseName" type="text" class="form-control" placeholder="Enter course name" />
                                            <span asp-validation-for="Course.CourseName" class="text-danger"></span>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-primary next-step" data-next="category-description">
                                            Next: Category & Description <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Step 2: Category & Description -->
                                <div id="category-description" class="content-section" style="display: none;">
                                    <div class="step-header">
                                        <h2><span class="step-badge">2</span> Category & Description</h2>
                                        <p class="step-description">
                                            Select the appropriate category for your course and write a compelling description.
                                            The description should clearly explain what students will learn and why they should choose your course.
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <div class="form-group mb-3">
                                            <label asp-for="Course.CategoryId" class="form-label"><strong>Category:</strong></label>
                                            <select asp-for="Course.CategoryId" class="form-control">
                                                <option value="">-- Select Category --</option>
                                                @if (Model.Categories?.Items != null)
                                                {
                                                    foreach (var category in Model.Categories.Items)
                                                    {
                                                        <option value="@category.CategoryId"
                                                        selected="@(category.CategoryId == Model.Course.CategoryId ? "selected" : null)">
                                                            @category.Title
                                                        </option>
                                                    }
                                                }
                                            </select>
                                            @* <small class="form-text text-muted">Category is set during creation and cannot be changed</small> *@
                                        </div>

                                        <div class="form-group mb-3">
                                            <label asp-for="Course.CourseContent" class="form-label"><strong>Course Description:</strong></label>
                                            <textarea asp-for="Course.CourseContent" rows="4" class="form-control" required
                                            placeholder="Write a detailed description of your course. What will students learn? What makes your course unique?"></textarea>
                                            <small class="form-text text-muted">Minimum 100 characters recommended</small>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-secondary prev-step" data-prev="course-info">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                        <button type="button" class="btn btn-primary next-step" data-next="skill-learn">
                                            Next: Skill Learn <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Step 3:  Skill Learn -->
                                <div id="skill-learn" class="content-section" style="display: none;">
                                    <div class="step-header">
                                        <h2><span class="step-badge">3</span> Skill Learn</h2>
                                        <p class="step-description">
                                            Identify the Skills students will learn.
                                            This information helps students understand whether your course is right for them.
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <!-- What will students learn -->
                                        <div class="form-group mb-4">
                                            <label class="form-label"><strong>What skills will students learn in your course?</strong></label>

                                            <div id="learningObjectives">
                                                <textarea asp-for="Course.SkillLearn" rows="4" class="form-control" required
                                                placeholder="You must enter the Skills that users can learn in this course."></textarea>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-secondary prev-step" data-prev="category-description">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                        <button type="button" class="btn btn-primary next-step" data-next="pricing-duration">
                                            Next: Pricing & Duration <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Step 4: Pricing & Duration -->
                                <div id="pricing-duration" class="content-section" style="display: none;">
                                    <div class="step-header">
                                        <h2><span class="step-badge">4</span> Pricing & Duration</h2>
                                        <p class="step-description">
                                            Set your course price and estimated duration. Consider the value you're providing
                                            and research similar courses to price competitively. Duration helps students plan their learning.
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group mb-3">
                                                    <label asp-for="Course.Cost" class="form-label"><strong>Course Price (Point):</strong></label>
                                                    <input asp-for="Course.Cost" class="form-control" type="number" min="0" step="0.01"
                                                    placeholder="29.99" />
                                                    <small class="form-text text-muted">Set to 0 for free courses</small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group mb-3">
                                                    <label asp-for="Course.CourseLength" class="form-label"><strong>Course Duration:</strong></label>
                                                    <input asp-for="Course.CourseLength" class="form-control"
                                                    placeholder="2 hours 30 minutes" />
                                                    <small class="form-text text-muted">Please fill in the total time to complete as follows: </small>
                                                    <small class="form-text text-muted">Ex: "2 hours 30 minutes = 2.30" </small>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-secondary prev-step" data-prev="skill-learn">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                        <button type="button" class="btn btn-primary next-step" data-next="course-image">
                                            Next: Course Image <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Step 5: Course Image -->
                                <div id="course-image" class="content-section" style="display: none;">
                                    <div class="step-header">
                                        <h2><span class="step-badge">5</span> Course Image</h2>
                                        <p class="step-description">
                                            Upload an eye-catching course image that represents your content. This will be the first thing
                                            students see when browsing courses. Use high-quality images (minimum 1280x720 pixels).
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <div class="form-group mb-3">
                                            <label class="form-label"><strong>Course Image:</strong></label>
                                            @if (!string.IsNullOrEmpty(Model.Course.CoursesImage))
                                            {
                                                <div class="mb-3">
                                                    <img src="@Model.Course.CoursesImage" alt="Course Image"
                                                    style="max-width: 300px; max-height: 200px;" class="img-thumbnail" />
                                                    <p class="text-success mt-2"><i class="fa fa-check-circle"></i> Current image uploaded</p>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="upload-placeholder mb-3">
                                                    <i class="fa fa-image fa-3x text-muted"></i>
                                                    <p class="text-muted mt-2">No image uploaded yet</p>
                                                </div>
                                            }
                                            <input asp-for="NewImage" type="file" class="form-control" accept="image" />
                                            <small class="form-text text-muted">
                                                Recommended: 1280x720 pixels, JPG or PNG format, max 5MB
                                            </small>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-secondary prev-step" data-prev="pricing-duration">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                        <button type="button" class="btn btn-primary next-step" data-next="requirement">
                                            Next: Requirement <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Step 6: Requirement -->
                                <div id="requirement" class="content-section" style="display: none;">
                                    <div class="step-header">
                                        <h2><span class="step-badge">6</span>Requirement</h2>
                                        <p class="step-description">
                                            List the knowledge, skills, or tools that students should have before taking this course.
                                            Clear requirements help students decide if the course is suitable for them.
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <!-- What Requirement -->
                                        <div class="form-group mb-4">
                                            <label class="form-label"><strong>What should students know or do before taking this course?</strong></label>

                                            <div id="learningObjectives">
                                                <textarea asp-for="Course.Requirement" rows="4" class="form-control" required
                                                placeholder="E.g. Basic HTML & CSS knowledge, Visual Studio Code installed, or No prior experience required."></textarea>
                                                <small class="form-text text-muted mt-1">
                                                    Use short bullet points. If there are no specific requirements, write: <em>No prior knowledge required. Suitable for beginners.</em>
                                                </small>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-secondary prev-step" data-prev="course-image">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                        <button type="button" class="btn btn-primary next-step" data-next="level-language">
                                            Next: Level & Language  <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Step 7: Level & Language -->
                                <div id="level-language" class="content-section" style="display: none;">
                                    <div class="step-header">
                                        <h2>
                                            <span class="step-badge">7</span> Level & Language </h2>
                                        <p class="step-description">
                                            Select your course's difficulty level and language. 
                                            This helps learners know if the course matches their background and preferred language for learning.
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group mb-3">
                                                    <label asp-for="Course.Level" class="form-label"><strong>Course Level:</strong></label>
                                                    <select asp-for="Course.Level" class="form-select">
                                                        <option value="AllLevels">All Levels</option>
                                                        <option value="Beginner">Beginner</option>
                                                        <option value="Expert">Expert</option>
                                                        <option value="Intermediate">Intermediate</option>
                                                    </select>
                                                    <small class="form-text text-muted">Set level for this Course</small>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group mb-3">
                                                    <label asp-for="Course.Language" class="form-label"><strong>Course Language:</strong></label>
                                                    <input asp-for="Course.Language" class="form-control" placeholder="English" />
                                                    <small class="form-text text-muted">Please set language for this Course</small>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-secondary prev-step" data-prev="requirement">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                        <button type="button" class="btn btn-primary next-step" data-next="intended-learners">
                                            Next: Intended Learners <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>

                                <!-- Step 8: Intended Learners -->
                                <div id="intended-learners" class="content-section" style="display: none;">
                                    <div class="step-header">
                                        <h2><span class="step-badge">8</span>Intended Learners</h2>
                                        <p class="step-description">
                                            Define who your target audience is.
                                            This information helps students understand if your course is right for them.
                                        </p>
                                    </div>

                                    <div class="form-section">
                                        <!-- Who is the target audience -->
                                        <div class="form-group mb-4">
                                            <label class="form-label"><strong>Who is the target audience for your course?</strong></label>

                                            <div id="learningObjectives">
                                                <textarea asp-for="Course.IntendedLearner" rows="4" class="form-control" required
                                                placeholder="You must enter the target audience you are aiming for in this course."></textarea>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                        <button type="button" class="btn btn-secondary prev-step" data-prev="level-language">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                        <button type="button" class="btn btn-primary next-step" data-next="curriculum">
                                            Next: Curriculum  <i class="fa fa-arrow-right"></i>
                                        </button>
                                    </div>
                                </div>
                            </form>

                            <!-- Step 9: Curriculum -->
                            <div id="curriculum" class="content-section" style="display: none;">
                                <div class="step-header">
                                    <h2><span class="step-badge">9</span> Curriculum</h2>
                                    <p class="step-description">
                                        Organize your course content into modules and lessons. Start with an outline of major topics,
                                        then break each topic into digestible lessons. This helps students follow your course structure.
                                    </p>
                                </div>

                                <div class="form-section">

                                    @if (Model.Modules != null && Model.Modules.Any())
                                    {
                                        @foreach (var module in Model.Modules)
                                        {
                                            <div class="card mb-3 module-card">
                                                <div id="module-display-@module.ModuleId">
                                                    <div class="card-header">
                                                        <div class="row align-items-center">
                                                            <div class="col">
                                                                <h5 class="mb-0">@module.Title</h5>
                                                                <small class="text-muted">@module.CountLesson lessons</small>
                                                            </div>
                                                            <div class="col-auto">
                                                                <div class="btn-group">
                                                                    <button type="button" class="btn-sm btn-outline-secondary"
                                                                    onclick="editModule(@module.ModuleId,
                                                                                    '@Html.Raw(JavaScriptEncoder.Default.Encode(module.Title))',
                                                                                    '@Html.Raw(JavaScriptEncoder.Default.Encode(module.Description ?? ""))',
                                                                                    @(module.IsPremium.ToString().ToLowerInvariant())
                                                                                )">
                                                                        <i class="fa fa-edit"></i> Update
                                                                    </button>
                                                                    <form method="post" asp-page-handler="DeleteModule"
                                                                    asp-route-id="@module.ModuleId"
                                                                    asp-route-courseId="@Model.Course.CourseId"
                                                                    class="d-inline">
                                                                        <button style="font-size: 95%;" type="submit" class="btn-sm btn-outline-danger"
                                                                        onclick="return confirm('Delete this module?')">
                                                                            <i class="fa fa-trash me-1"></i>Delete
                                                                        </button>
                                                                    </form>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="card-body">
                                                        <p class="text-muted">@module.Description</p>
                                                        <div class="mb-3">
                                                            <span class="badge @(module.IsPremium ? "bg-warning" : "bg-success")">
                                                                @(module.IsPremium ? "Premium" : "Free")
                                                            </span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <!-- Form Edit Module -->
                                                <div id="edit-module-form-@module.ModuleId" class="card mb-3" style="display: none;">
                                                    <div class="card-body">
                                                        <form method="post" asp-page-handler="EditModule">
                                                            <input type="hidden" asp-for="Module.ModuleId" value="@module.ModuleId" />
                                                            <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />
                                                            <div class="mb-3">
                                                                <label class="form-label">Module Title *</label>
                                                                <input  asp-for="Module.Title" type="text" class="form-control" id="editTitle-@module.ModuleId" required />
                                                            </div>
                                                            <div class="mb-3">
                                                                <label class="form-label">Description</label>
                                                                <textarea  asp-for="Module.Description" class="form-control" id="editDescription-@module.ModuleId" rows="3"></textarea>
                                                            </div>
                                                            <div class="mb-3">
                                                                <div class="form-check">
                                                                    <input asp-for="Module.IsPremium" type="checkbox" style="margin-top: 10px;" class="form-check-input" id="editIsPremium-@module.ModuleId" />
                                                                    <label class="form-check-label">Premium Module</label>
                                                                </div>
                                                            </div>
                                                            <div class="d-flex gap-2">
                                                                <button type="submit" class="btn btn-primary btn-sm">
                                                                    <i class="fa fa-save me-1"></i>Save Changes
                                                                </button>
                                                                <button type="button" class="btn btn-secondary btn-sm" onclick="cancelEditModule(@module.ModuleId)">
                                                                    <i class="fa fa-times me-1"></i>Cancel
                                                                </button>
                                                            </div>
                                                        </form>
                                                    </div>
                                                </div>
                                                <!-- Lesson List -->
                                                <div class="card-body">
                                                    @if (module.Lessons != null && module.Lessons.Any())
                                                    {
                                                        <div class="lessons-list">
                                                            <h6>Lessons:</h6>
                                                            <div class="list-group">
                                                                @foreach (var lesson in module.Lessons)
                                                                {
                                                                    <div id="lesson-display-@lesson.LessonId">
                                                                        <div class="list-group-item d-flex flex-column">
                                                                            <!-- Header Section: Title, Description, Actions -->
                                                                            <div class="d-flex justify-content-between align-items-start w-100 mb-3">
                                                                                <div class="flex-grow-1">
                                                                                    <div class="d-flex align-items-center mb-2">
                                                                                        <i class="fa fa-play-circle text-primary me-2"></i>
                                                                                        <h6 class="mb-0">@lesson.Title</h6>
                                                                                    </div>
                                                                                    @if (!string.IsNullOrEmpty(lesson.Description))
                                                                                    {
                                                                                        <p class="text-muted mb-0">@lesson.Description</p>
                                                                                    }
                                                                                </div>

                                                                                <!-- Action Buttons -->
                                                                                <div class="btn-group">
                                                                                    <button type="button" class="btn-sm btn-outline-secondary"
                                                                                            onclick="editLesson(@lesson.LessonId,
                                                                                            '@Html.Raw(JavaScriptEncoder.Default.Encode(lesson.Title))',
                                                                                            '@Html.Raw(JavaScriptEncoder.Default.Encode(lesson.Description))')"
                                                                                            title="Update">
                                                                                        <i class="fa fa-edit" style="padding-left: 20%;"></i>
                                                                                    </button>
                                                                                    <form method="post" asp-page-handler="DeleteLesson"
                                                                                          asp-route-id="@lesson.LessonId"
                                                                                          asp-route-courseId="@Model.Course.CourseId"
                                                                                          class="d-inline">
                                                                                        <button style="font-size: 100%;" type="submit" class="btn-sm btn-outline-danger"
                                                                                                onclick="return confirm('Delete this Lesson?')"
                                                                                                title="Delete">
                                                                                            <i class="fa fa-trash me-1" style="padding-left: 15%;"></i>
                                                                                        </button>
                                                                                    </form>
                                                                                </div>
                                                                            </div>

                                                                            <!-- Media Content Section -->
                                                                            @if (lesson.VideoLink != null || lesson.DocumentLink != null)
                                                                            {
                                                                                <div class="media-content-section mb-3">
                                                                                    <div class="row g-3">
                                                                                        <!-- Video Section -->
                                                                                        @if (lesson.VideoLink != null)
                                                                                        {
                                                                                            <div class="col-12">
                                                                                                <div class="card shadow-sm">
                                                                                                    <div class="card-header bg-gradient-danger text-white d-flex align-items-center">
                                                                                                        <i class="bi bi-camera-video" style="color: black"></i>
                                                                                                        <span style="color: black">Video Content</span>
                                                                                                    </div>
                                                                                                    <div class="card-body p-0">
                                                                                                        <!-- Video Player -->
                                                                                                        <div class="video-container" style="position: relative; background: #000;">
                                                                                                            <video controls
                                                                                                                   class="w-100 protected-video"
                                                                                                                   style="max-height: 300px; object-fit: contain;"
                                                                                                                   preload="metadata"
                                                                                                                   id="video-@lesson.LessonId"
                                                                                                                   poster="#"
                                                                                                                   controlsList="nodownload noremoteplayback"
                                                                                                                   disablePictureInPicture
                                                                                                                   oncontextmenu="return false;">
                                                                                                                <source src="@lesson.VideoLink" type="video/mp4">
                                                                                                                <source src="@lesson.VideoLink" type="video/webm">
                                                                                                                <source src="@lesson.VideoLink" type="video/ogg">
                                                                                                                Your browser does not support the video tag.
                                                                                                            </video>

                                                                                                            <!-- Overlay để ngăn right-click -->
                                                                                                            <div class="video-overlay"
                                                                                                                 style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;
                                                                                                                    pointer-events: none; z-index: 1;">
                                                                                                            </div>
                                                                                                        </div>

                                                                                                        <!-- Video Info -->
                                                                                                        <div class="p-3 bg-light border-top">
                                                                                                            <div class="d-flex justify-content-between align-items-center">
                                                                                                                <div>
                                                                                                                    <h6 class="mb-1 text-truncate">@(System.IO.Path.GetFileName(lesson.VideoLink))</h6>
                                                                                                                    <small class="text-muted">
                                                                                                                        <i class="fas fa-file-video me-1"></i>
                                                                                                                        Video File
                                                                                                                    </small>
                                                                                                                </div>
                                                                                                                <div>
                                                                                                                    <span class="badge">
                                                                                                                        <i class="bi bi-file-earmark-play"></i>Available
                                                                                                                    </span>
                                                                                                                </div>
                                                                                                            </div>

                                                                                                            <!-- Video Controls -->
                                                                                                            @* <div class="mt-2 d-flex gap-2">
                                                                                                                <button class="btn btn-sm btn-outline-primary" onclick="toggleFullscreen('video-@lesson.LessonId')">
                                                                                                                    <i class="bi bi-fullscreen"></i> Fullscreen
                                                                                                                </button>
                                                                                                                <button class="btn btn-sm btn-outline-secondary" onclick="downloadMedia('@lesson.VideoLink', '@System.IO.Path.GetFileName(lesson.VideoLink)')">
                                                                                                                    <i class="bi bi-cloud-download"></i> Download
                                                                                                                </button>
                                                                                                            </div> *@
                                                                                                        </div>
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        }

                                                                                        <!-- Document Section - Download Only -->
                                                                                        @if (lesson.DocumentLink != null)
                                                                                        {
                                                                                            <div class="col-12" style="padding-top: 4%">
                                                                                                <div class="card shadow-sm">
                                                                                                    <div class="card-header bg-gradient-success text-white d-flex align-items-center">
                                                                                                        <i class="bi bi-file-earmark-text" style="color: black"></i>
                                                                                                        <span style="color: black">Document Content</span>
                                                                                                    </div>
                                                                                                    <div class="card-body">
                                                                                                        @{
                                                                                                            var fileName = System.IO.Path.GetFileName(lesson.DocumentLink);
                                                                                                            var fileExtension = System.IO.Path.GetExtension(lesson.DocumentLink).ToLower();
                                                                                                        }

                                                                                                        <div class="d-flex align-items-center justify-content-between">
                                                                                                            <div class="d-flex align-items-center">
                                                                                                                <div class="document-icon me-3">
                                                                                                                    @if (fileExtension == ".pdf")
                                                                                                                    {
                                                                                                                        <i class="bi bi-filetype-pdf" style="font-size: 2.5rem;"></i>
                                                                                                                    }
                                                                                                                    else if (fileExtension == ".doc" || fileExtension == ".docx")
                                                                                                                    {
                                                                                                                        <i class="bi bi-file-earmark-word" style="font-size: 2.5rem;"></i>
                                                                                                                    }
                                                                                                                    else if (fileExtension == ".xls" || fileExtension == ".xlsx")
                                                                                                                    {
                                                                                                                        <i class="bi bi-file-earmark-excel" style="font-size: 2.5rem;"></i>
                                                                                                                    }
                                                                                                                    else if (fileExtension == ".ppt" || fileExtension == ".pptx")
                                                                                                                    {
                                                                                                                        <i class="bi bi-file-earmark-ppt" style="font-size: 2.5rem;"></i>
                                                                                                                    }
                                                                                                                    else if (fileExtension == ".txt")
                                                                                                                    {
                                                                                                                        <i class="bi bi-file-earmark-font" style="font-size: 2.5rem;"></i>
                                                                                                                    }
                                                                                                                    else if (fileExtension == ".jpg" || fileExtension == ".jpeg" || fileExtension == ".png" || fileExtension == ".gif")
                                                                                                                    {
                                                                                                                        <i class="bi bi-file-earmark-image" style="font-size: 2.5rem;"></i>
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                        <i class="bi bi-file-earmark-fill" style="font-size: 2.5rem;"></i>
                                                                                                                    }
                                                                                                                </div>
                                                                                                                <div>
                                                                                                                    <h6 class="mb-1">@fileName</h6>
                                                                                                                    <small class="text-muted">
                                                                                                                        @fileExtension.ToUpper() File
                                                                                                                    </small>
                                                                                                                    <br>
                                                                                                                    <span class="badge">
                                                                                                                        <i class="bi bi-file-earmark-arrow-down"></i>Available
                                                                                                                    </span>
                                                                                                                </div>
                                                                                                            </div>

                                                                                                            <!-- Document Controls -->
                                                                                                            <div class="d-flex flex-column gap-2">
                                                                                                                @* <button class="btn btn-primary btn-sm" onclick="downloadMedia('@lesson.DocumentLink', '@fileName')">
                                                                                                                    <i class="bi bi-download"></i> Download
                                                                                                                </button> *@
                                                                                                                <a data-href="@lesson.DocumentLink" class="btn btn-outline-secondary btn-sm open-doc-btn" target="_blank">
                                                                                                                    <i class="bi bi-folder2-open"></i> Open
                                                                                                                </a>
                                                                                                            </div>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        }
                                                                                    </div>
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="alert alert-info d-flex align-items-center mb-3">
                                                                                    <i class="fa fa-info-circle me-2"></i>
                                                                                    <span>No video or document available for this lesson</span>
                                                                                </div>
                                                                            }

                                                                            <!-- Questions List -->
                                                                            @if (lesson.Questions != null && lesson.Questions.Any())
                                                                            {
                                                                                <div class="mt-2 ps-4 w-100">
                                                                                    @* <h6>Questions:</h6> *@
                                                                                    <div class="list-group">
                                                                                        @foreach (var question in lesson.Questions)
                                                                                        {
                                                                                            <div id="question-display-@question.QuestionId" class="list-group-item">
                                                                                                <div class="d-flex justify-content-between align-items-center">
                                                                                                    <div>
                                                                                                        <i class="bi bi-chat-left-text"></i>
                                                                                                        @question.Question_text
                                                                                                    </div>
                                                                                                    <div class="btn-group">
                                                                                                        @* <button style="font-size: 70%;" class="btn-outline-primary btn-sm" onclick="showCreateQuestionForm(@lesson.LessonId)">
                                                                                                            <i class="fa fa-plus me-1"></i>Add New Question
                                                                                                        </button> *@
                                                                                                        <button class="btn-sm btn-outline-secondary"
                                                                                                                onclick="editQuestion(@question.QuestionId,
                                                                                                                '@Html.Raw(JavaScriptEncoder.Default.Encode(question.Question_text))',
                                                                                                                '@question.QuestionType')"
                                                                                                                title="Update">
                                                                                                            <i class="fa fa-edit" style="padding-left: 20%;"></i>
                                                                                                        </button>
                                                                                                        <form method="post" asp-page-handler="DeleteQuestion"
                                                                                                              asp-route-id="@question.QuestionId"
                                                                                                              asp-route-lessonId="@lesson.LessonId"
                                                                                                              asp-route-courseId="@Model.Course.CourseId"
                                                                                                              class="d-inline">
                                                                                                            <button style="font-size: 100%;" type="submit" class="btn-sm btn-outline-danger"
                                                                                                                    onclick="return confirm('Delete this question?')"
                                                                                                                    title="Delete">
                                                                                                                <i class="fa fa-trash me-1" style="padding-left: 15%;"></i>
                                                                                                            </button>
                                                                                                        </form>
                                                                                                    </div>
                                                                                                </div>

                                                                                                <!-- Answers List -->
                                                                                                @if (question.Answers != null && question.Answers.Any())
                                                                                                {
                                                                                                    <div class="mt-3 ps-4">
                                                                                                        <h6 class="text-muted mb-2">
                                                                                                            <i class="bi bi-list-check"></i> Answers:
                                                                                                        </h6>
                                                                                                        <div class="list-group">
                                                                                                            @foreach (var answer in question.Answers)
                                                                                                            {
                                                                                                                <div id="answer-display-@answer.AnswerId" class="list-group-item d-flex justify-content-between align-items-center py-2">
                                                                                                                    <div class="d-flex align-items-center">
                                                                                                                        @if (answer.Is_correct)
                                                                                                                        {
                                                                                                                            <i class="bi bi-check-circle-fill text-success me-2"></i>
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                            <i class="bi bi-x-circle text-danger me-2"></i>
                                                                                                                        }
                                                                                                                        <span class="@(answer.Is_correct ? "fw-bold text-success" : "text-danger")">
                                                                                                                            @answer.Text
                                                                                                                        </span>
                                                                                                                    </div>
                                                                                                                    <div class="btn-group">
                                                                                                                        <button class="btn-sm btn-outline-secondary"
                                                                                                                                onclick="editAnswer(@answer.AnswerId,
                                                                                                                                 '@Html.Raw(JavaScriptEncoder.Default.Encode(answer.Text))',
                                                                                                                                 @answer.Is_correct.ToString().ToLower())"
                                                                                                                                title="Update">
                                                                                                                            <i class="fa fa-edit" style="padding-left: 20%;"></i>
                                                                                                                        </button>
                                                                                                                        <form method="post" asp-page-handler="DeleteAnswer"
                                                                                                                              asp-route-id="@answer.AnswerId"
                                                                                                                              asp-route-questionId="@question.QuestionId"
                                                                                                                              asp-route-courseId="@Model.Course.CourseId"
                                                                                                                              class="d-inline">
                                                                                                                            <button style="font-size: 100%;" type="submit" class="btn-sm btn-outline-danger"
                                                                                                                                    onclick="return confirm('Delete this answer?')"
                                                                                                                                    title="Delete">
                                                                                                                                <i class="fa fa-trash" style="padding-left: 15%;"></i>
                                                                                                                            </button>
                                                                                                                        </form>
                                                                                                                    </div>
                                                                                                                </div>

                                                                                                                <!-- Edit Answer Form -->
                                                                                                                <div id="edit-answer-form-@answer.AnswerId" class="card mt-2 mb-2" style="display: none; border: 1px solid #dee2e6; background-color: #f8f9fa;">
                                                                                                                    <div class="card-body">
                                                                                                                        <h6 class="card-title">Edit Answer</h6>
                                                                                                                        <form method="post" asp-page-handler="EditAnswer">
                                                                                                                            <input type="hidden" asp-for="Answer.AnswerId" value="@answer.AnswerId" />
                                                                                                                            <input type="hidden" asp-for="Answer.QuestionId" value="@answer.QuestionId" />
                                                                                                                            <input type="hidden" asp-for="Question.LessonId" value="@question.LessonId" />
                                                                                                                            <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />

                                                                                                                            <div class="mb-3">
                                                                                                                                <label asp-for="Answer.Text" class="form-label">Answer Text *</label>
                                                                                                                                <textarea asp-for="Answer.Text" class="form-control" id="editAnswerText-@answer.AnswerId" rows="2" required placeholder="Enter your answer here..."></textarea>
                                                                                                                            </div>

                                                                                                                            <div class="mb-3">
                                                                                                                                <div class="form-check">
                                                                                                                                    <input class="form-check-input" style="margin-top: 10px;" type="checkbox" asp-for="Answer.Is_correct" id="editIsCorrect-@answer.AnswerId" />
                                                                                                                                    <label class="form-check-label" for="editIsCorrect-@answer.AnswerId">
                                                                                                                                        Is Correct Answer
                                                                                                                                    </label>
                                                                                                                                </div>
                                                                                                                            </div>

                                                                                                                            <div class="d-flex gap-2">
                                                                                                                                <button type="submit" class="btn btn-primary btn-sm">
                                                                                                                                    <i class="fa fa-save me-1"></i>Save Changes
                                                                                                                                </button>
                                                                                                                                <button type="button" class="btn btn-secondary btn-sm" onclick="cancelEditAnswer(@answer.AnswerId)">
                                                                                                                                    <i class="fa fa-times me-1"></i>Cancel
                                                                                                                                </button>
                                                                                                                            </div>
                                                                                                                        </form>
                                                                                                                    </div>
                                                                                                                </div>
                                                                                                            }
                                                                                                        </div>

                                                                                                        <!-- Add New Answer Button -->
                                                                                                        <div class="mt-2">
                                                                                                            <button class="btn btn-sm btn-outline-primary" onclick="showCreateAnswerForm(@question.QuestionId)">
                                                                                                                <i class="fa fa-plus me-1"></i>Add New Answer
                                                                                                            </button>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <div class="mt-3 ps-4">
                                                                                                        <p class="text-muted mb-2">No answers for this question.</p>
                                                                                                        <button class="btn btn-sm btn-outline-primary" onclick="showCreateAnswerForm(@question.QuestionId)">
                                                                                                            <i class="fa fa-plus me-1"></i>Add New Answer
                                                                                                        </button>
                                                                                                    </div>
                                                                                                }

                                                                                                <!-- Create Answer Form -->
                                                                                                <div id="create-answer-form-@question.QuestionId" class="card mt-2 mb-2" style="display: none; border: 1px solid #dee2e6; background-color: #f8f9fa;">
                                                                                                    <div class="card-body">
                                                                                                        <h6 class="card-title">Add New Answer</h6>
                                                                                                        <form method="post" asp-page-handler="CreateAnswer">
                                                                                                            <input type="hidden" asp-for="Answer.QuestionId" value="@question.QuestionId" />
                                                                                                            <input type="hidden" asp-for="Question.LessonId" value="@question.LessonId" />
                                                                                                            <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />

                                                                                                            <div class="mb-3">
                                                                                                                <label asp-for="Answer.Text" class="form-label">Answer Text *</label>
                                                                                                                <textarea asp-for="Answer.Text" class="form-control" rows="2" required placeholder="Enter your answer here..."></textarea>
                                                                                                            </div>

                                                                                                            <div class="mb-3">
                                                                                                                <div class="form-check">
                                                                                                                    <input style="margin-top: 10px;" class="form-check-input" type="checkbox" asp-for="Answer.Is_correct" />
                                                                                                                    <label class="form-check-label" asp-for="Answer.Is_correct">
                                                                                                                        Is Correct Answer
                                                                                                                    </label>
                                                                                                                </div>
                                                                                                            </div>

                                                                                                            <div class="d-flex gap-2">
                                                                                                                <button type="submit" class="btn btn-primary btn-sm">
                                                                                                                    <i class="fa fa-save me-1"></i>Save Answer
                                                                                                                </button>
                                                                                                                <button type="button" class="btn btn-secondary btn-sm" onclick="cancelCreateAnswer(@question.QuestionId)">
                                                                                                                    <i class="fa fa-times me-1"></i>Cancel
                                                                                                                </button>
                                                                                                            </div>
                                                                                                        </form>
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>

                                                                                            <!-- Edit Question Form -->
                                                                                            <div id="edit-question-form-@question.QuestionId" class="card mt-2 mb-2" style="display: none; border: 1px solid #dee2e6; background-color: #f8f9fa;">
                                                                                                <div class="card-body">
                                                                                                    <h6 class="card-title">Edit Question</h6>
                                                                                                    <form method="post" asp-page-handler="EditQuestion">
                                                                                                        <input type="hidden" asp-for="Question.QuestionId" value="@question.QuestionId" />
                                                                                                        <input type="hidden" asp-for="Question.LessonId" value="@question.LessonId" />
                                                                                                        <input type="hidden" asp-for="Lesson.ModuleId" value="@lesson.ModuleId" />
                                                                                                        <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />

                                                                                                        <div class="mb-3">
                                                                                                            <label asp-for="Question.Question_text" class="form-label">Question Text *</label>
                                                                                                            <textarea asp-for="Question.Question_text" class="form-control" id="editQuestionText-@question.QuestionId" rows="3" required placeholder="Enter your question here..."></textarea>
                                                                                                        </div>

                                                                                                        <div class="mb-3">
                                                                                                            <label class="form-label">Question Type</label>
                                                                                                            <select asp-for="Question.QuestionType" class="form-select" id="editQuestionType-@question.QuestionId">
                                                                                                                <option value="MultipleChoice">Multiple Choice</option>
                                                                                                                <option value="SingleChoice">Single Choice</option>
                                                                                                            </select>
                                                                                                        </div>

                                                                                                        <div class="d-flex gap-2">
                                                                                                            <button type="submit" class="btn btn-primary btn-sm">
                                                                                                                <i class="fa fa-save me-1"></i>Save Changes
                                                                                                            </button>
                                                                                                            <button type="button" class="btn btn-secondary btn-sm" onclick="cancelEditQuestion(@question.QuestionId)">
                                                                                                                <i class="fa fa-times me-1"></i>Cancel
                                                                                                            </button>
                                                                                                        </div>
                                                                                                    </form>
                                                                                                </div>
                                                                                            </div>
                                                                                        }
                                                                                    </div>
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <p class="text-muted">No questions in this lesson.</p>
                                                                            }

                                                                            <!-- Assignment List -->
                                                                            @if (lesson.Assignment != null && lesson.Assignment.Any())
                                                                            {
                                                                                foreach (var assignment in lesson.Assignment)
                                                                                {
                                                                                    <div class="assignment-section mb-4">
                                                                                        <div class="card shadow-sm">
                                                                                            <div class="card-header bg-gradient-warning text-white d-flex align-items-center justify-content-between">
                                                                                                <div>
                                                                                                    <i class="bi bi-journal-text me-2" style="color: black;"></i>
                                                                                                    <span style="color: black">Assignment</span>
                                                                                                </div>
                                                                                                <div class="d-flex gap-2">
                                                                                                    <button class="btn btn-sm btn-light"
                                                                                                            onclick="EditAssignment(@assignment.AssignmentId)">
                                                                                                        <i class="bi bi-pencil"></i> Update
                                                                                                    </button>

                                                                                                    <button type="submit"
                                                                                                            form="delete-assignment-form-@assignment.AssignmentId"
                                                                                                            class="btn btn-sm btn-danger"
                                                                                                            onclick="return confirm('Are you sure you want to delete this assignment?');">
                                                                                                        <i class="bi bi-trash"></i> Delete
                                                                                                    </button>
                                                                                                </div>

                                                                                            </div>

                                                                                            <div class="card-body">
                                                                                                <!-- Display Section -->
                                                                                                <div id="assignment-display-@assignment.AssignmentId" class="w-100">
                                                                                                    <p><strong>Content:</strong></p>
                                                                                                    <div class="mb-3 border p-3 bg-light rounded">
                                                                                                        @assignment.Content
                                                                                                    </div>

                                                                                                    <p><strong>Meeting Link:</strong></p>
                                                                                                    @if (!string.IsNullOrEmpty(assignment.MeetLink))
                                                                                                    {
                                                                                                        <a href="@assignment.MeetLink" target="_blank" class="btn btn-outline-primary btn-sm">
                                                                                                            <i class="bi bi-link-45deg"></i> Join Meeting
                                                                                                        </a>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <span class="text-muted">Assignment does not have Meeting Link yet</span>
                                                                                                    }
                                                                                                </div>
                                                                                                <form method="post"
                                                                                                      asp-page-handler="DeleteAssignment"
                                                                                                      id="delete-assignment-form-@assignment.AssignmentId">
                                                                                                    <input type="hidden" name="DeleteAssignmentId" value="@assignment.AssignmentId" />
                                                                                                    <input type="hidden" asp-for="Lesson.ModuleId" value="@lesson.ModuleId" />
                                                                                                    <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />
                                                                                                </form>

                                                                                                <!-- Edit Form Section - Black & White Theme -->
                                                                                                <div id="edit-assignment-form-@assignment.AssignmentId" class="mt-4" style="display: none;">
                                                                                                    <div class="card border-dark shadow">
                                                                                                        <div class="card-header text-white">
                                                                                                            <h5 class="mb-0">
                                                                                                                <i class="bi bi-pencil-square me-2"></i>
                                                                                                                Edit Assignment
                                                                                                            </h5>
                                                                                                        </div>
                                                                                                        <div class="card-body p-4 bg-light">
                                                                                                            <form method="post" asp-page-handler="EditAssignment">
                                                                                                                <input type="hidden" name="EditAssignment.AssignmentId" value="@assignment.AssignmentId" />
                                                                                                                <input type="hidden" name="EditAssignment.LessonId" value="@assignment.LessonId" />
                                                                                                                <input type="hidden" asp-for="Lesson.ModuleId" value="@lesson.ModuleId" />
                                                                                                                <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />

                                                                                                                <div class="row">
                                                                                                                    <div class="col-12">
                                                                                                                        <div class="mb-4">
                                                                                                                            <label class="form-label fw-bold fs-6 text-dark">
                                                                                                                                <i class="bi bi-file-text me-2"></i>
                                                                                                                                Assignment Content
                                                                                                                            </label>
                                                                                                                            <textarea class="form-control form-control-lg border-dark"
                                                                                                              name="EditAssignment.Content"
                                                                                                              rows="12"
                                                                                                              style="height: 350px; min-height: 350px; resize: vertical; font-size: 14px; line-height: 1.6; border: 2px solid #000;"
                                                                                                              placeholder="Enter assignment content here...">@assignment.Content</textarea>
                                                                                                                            <div class="form-text text-muted">
                                                                                                                                <i class="bi bi-info-circle me-1"></i>
                                                                                                                                Provide detailed instructions and requirements for this assignment.
                                                                                                                            </div>
                                                                                                                        </div>
                                                                                                                    </div>
                                                                                                                </div>

                                                                                                                <div class="row">
                                                                                                                    <div class="col-12">
                                                                                                                        <div class="mb-4">
                                                                                                                            <label class="form-label fw-bold fs-6 text-dark">
                                                                                                                                <i class="bi bi-camera-video me-2"></i>
                                                                                                                                Meeting Link
                                                                                                                            </label>
                                                                                                                            <input type="url"
                                                                                                                                   class="form-control form-control-lg border-dark"
                                                                                                                                   name="EditAssignment.MeetLink"
                                                                                                                                   value="@assignment.MeetLink"
                                                                                                                                   style="border: 2px solid #000;"
                                                                                                                                   placeholder="https://meet.google.com/xxx-xxxx-xxx" />
                                                                                                                            <div class="form-text text-muted">
                                                                                                                                <i class="bi bi-info-circle me-1"></i>
                                                                                                                                Optional: Add a meeting link for discussion or presentation of this assignment.
                                                                                                                            </div>
                                                                                                                        </div>
                                                                                                                    </div>
                                                                                                                </div>

                                                                                                                <div class="row">
                                                                                                                    <div class="col-12">
                                                                                                                        <div class="d-flex justify-content-end gap-3 pt-3 border-top border-dark">
                                                                                                                            <button type="button"
                                                                                                                                    class="btn btn-outline-dark btn-lg px-4"
                                                                                                                                    onclick="CancelEditAssignment(@assignment.AssignmentId)"
                                                                                                                                    style="border: 2px solid #000;">
                                                                                                                                <i class="bi bi-x-circle me-2"></i>
                                                                                                                                Cancel
                                                                                                                            </button>
                                                                                                                            <button type="submit"
                                                                                                                                    class="btn btn-dark btn-lg px-4"
                                                                                                                                    style="background-color: #000; border: 2px solid #000;">
                                                                                                                                <i class="bi bi-save me-2"></i>
                                                                                                                                Save Changes
                                                                                                                            </button>
                                                                                                                        </div>
                                                                                                                    </div>
                                                                                                                </div>
                                                                                                            </form>
                                                                                                        </div>
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="text-center py-5">
                                                                                    <i class="bi bi-journal-x text-muted" style="font-size: 3rem;"></i>
                                                                                    <p class="text-muted mt-2">No Assignment in this lesson.</p>
                                                                                </div>
                                                                            }


                                                                            <!-- Create Question Form for this Lesson (Hidden by default) -->
                                                                                <div id="create-question-form-@lesson.LessonId" class="card mt-3 mb-3" style="display: none;">
                                                                                    <div class="card-body">
                                                                                        <h6 class="card-title">Add New Question to "@lesson.Title"</h6>

                                                                                        <!-- Question Creation Options -->
                                                                                        <div class="tab-container">
                                                                                            <div class="tab-nav">
                                                                                                <button type="button" class="tab-button active" id="manual-@lesson.LessonId" onclick="toggleQuestionForms(@lesson.LessonId, 'manual', this)">
                                                                                                    <i class="fa fa-edit tab-icon"></i>
                                                                                                    Manual Entry
                                                                                                </button>
                                                                                                <button type="button" class="tab-button" id="excel-@lesson.LessonId" onclick="toggleQuestionForms(@lesson.LessonId, 'excel', this)">
                                                                                                <i class="bi bi-file-earmark-excel"></i>
                                                                                                    From Excel
                                                                                                </button>
                                                                                                <button type="button" class="tab-button" id="ai-@lesson.LessonId" onclick="toggleQuestionForms(@lesson.LessonId, 'ai', this)">
                                                                                                <i class="bi bi-openai"></i>
                                                                                                    AI Generate
                                                                                                </button>
                                                                                            </div>
                                                                                        </div>

                                                                                        <!-- Manual Entry Form -->
                                                                                        <div id="manual-form-@lesson.LessonId" class="form-section">
                                                                                            <form id="questionForm-@lesson.LessonId" method="post" asp-page-handler="AddQuestion">
                                                                                                <input type="hidden" asp-for="Question.LessonId" value="@lesson.LessonId" />
                                                                                                <input type="hidden" asp-for="Lesson.ModuleId" value="@lesson.ModuleId" />
                                                                                                <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />
                                                                                                <div class="mb-3">
                                                                                                    <label asp-for="Question.Question_text" class="form-label">Question Text *</label>
                                                                                                    <textarea asp-for="Question.Question_text" class="form-control" id="questionText-@lesson.LessonId" rows="3" required placeholder="Enter your question here..."></textarea>
                                                                                                </div>
                                                                                                <div class="mb-3">
                                                                                                    <label class="form-label">Question Type</label>
                                                                                                    <select asp-for="Question.QuestionType" class="form-select" id="questionType-@lesson.LessonId">
                                                                                                        <option value="MultipleChoice">Multiple Choice</option>
                                                                                                        <option value="SingleChoice">Single Choice</option>
                                                                                                    </select>
                                                                                                </div>
                                                                                                <div class="d-flex gap-2">
                                                                                                    <button type="submit" class="btn btn-primary btn-sm">
                                                                                                        <i class="fa fa-save me-1"></i>Save Question
                                                                                                    </button>
                                                                                                    <button type="button" class="btn btn-secondary btn-sm" onclick="cancelCreateQuestion(@lesson.LessonId)">
                                                                                                        <i class="fa fa-times me-1"></i>Cancel
                                                                                                    </button>
                                                                                                </div>
                                                                                            </form>
                                                                                        </div>

                                                                                        <!-- Excel Upload Form -->
                                                                                        <div id="excel-form-@lesson.LessonId" class="form-section" style="display: none;">
                                                                                            <form id="excelForm-@lesson.LessonId" method="post" asp-page-handler="UploadExcel" enctype="multipart/form-data">
                                                                                                <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId"/>
                                                                                                <input type="hidden" name="lessonId" value="@lesson.LessonId" />

                                                                                                <!-- Progress indicator -->
                                                                                                <div id="upload-progress-@lesson.LessonId" class="progress mb-3" style="display: none;">
                                                                                                    <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" style="width: 0%">
                                                                                                        <span class="sr-only">0% Complete</span>
                                                                                                    </div>
                                                                                                </div>

                                                                                                <div class="mb-3">
                                                                                                    <label class="form-label">Upload Excel File *</label>
                                                                                                    <input type="file" class="form-control" name="excelFile" id="excelFile-@lesson.LessonId" accept=".xlsx,.xls" required>
                                                                                                    <div class="form-text">
                                                                                                        <i class="fa fa-info-circle me-1"></i>
                                                                                                        Upload an Excel file containing questions and answers. (Max size: 10MB)
                                                                                                        <a href="#" onclick="showExcelFormat(event)">View format requirements</a>
                                                                                                    </div>
                                                                                                    <!-- File validation feedback -->
                                                                                                    <div id="file-feedback-@lesson.LessonId" class="invalid-feedback"></div>
                                                                                                </div>

                                                                                                <!-- Excel Format Info (Hidden by default) -->
                                                                                                <div id="excel-format-info" class="alert alert-info" style="display: none;">
                                                                                                    <h6><i class="fa fa-file-excel me-1"></i> Excel Format Requirements:</h6>
                                                                                                    <ul class="mb-0">
                                                                                                        <li><strong>Column A:</strong> QuestionText</li>
                                                                                                        <li><strong>Column B:</strong> AnswerText</li>
                                                                                                        <li><strong>Column C:</strong> IsCorrect (True/False)</li>
                                                                                                        <li><strong>Column D:</strong> QuestionType (MultipleChoice, SingleChoice)</li>
                                                                                                        <li><strong>Note:</strong> Create Questions, Answers, Correct answer (True or False), and Question Type along the columns described above.</li>
                                                                                                        <li>
                                                                                                            <strong>Example:</strong>
                                                                                                            <div class="table-responsive mt-2">
                                                                                                                <table class="table table-bordered table-sm mb-0">
                                                                                                                    <thead class="table-light">
                                                                                                                        <tr>
                                                                                                                            <th>A</th>
                                                                                                                            <th>B</th>
                                                                                                                            <th>C</th>
                                                                                                                            <th>D</th>
                                                                                                                        </tr>
                                                                                                                    </thead>
                                                                                                                    <tbody>
                                                                                                                        <tr>
                                                                                                                            <th>QuestionText</th>
                                                                                                                            <th>AnswerText</th>
                                                                                                                            <th>IsCorrect</th>
                                                                                                                            <th>QuestionType</th>
                                                                                                                        </tr>
                                                                                                                        <tr>
                                                                                                                            <td>What is 2+2?</td>
                                                                                                                            <td>4</td>
                                                                                                                            <td>True</td>
                                                                                                                            <td>SingleChoice</td>
                                                                                                                        </tr>
                                                                                                                        <tr>
                                                                                                                            <td>What is 2+2?</td>
                                                                                                                            <td>3</td>
                                                                                                                            <td>False</td>
                                                                                                                            <td>SingleChoice</td>
                                                                                                                        </tr>
                                                                                                                        <tr>
                                                                                                                            <td>What is 2+2?</td>
                                                                                                                            <td>5</td>
                                                                                                                            <td>False</td>
                                                                                                                            <td>SingleChoice</td>
                                                                                                                        </tr>
                                                                                                                    </tbody>
                                                                                                                </table>
                                                                                                            </div>
                                                                                                        </li>
                                                                                                    </ul>
                                                                                                </div>

                                                                                                <div class="d-flex gap-2">
                                                                                                    <button type="submit" class="btn btn-success btn-sm" id="uploadBtn-@lesson.LessonId">
                                                                                                        <i class="fa fa-upload me-1"></i>Upload & Import
                                                                                                    </button>
                                                                                                    <button type="button" class="btn btn-secondary btn-sm" onclick="cancelCreateQuestion(@lesson.LessonId)">
                                                                                                        <i class="fa fa-times me-1"></i>Cancel
                                                                                                    </button>
                                                                                                </div>
                                                                                            </form>
                                                                                        </div>

                                                                                        <!-- AI Generate Form -->
                                                                                        <div id="ai-form-@lesson.LessonId" class="form-section" style="display: none;">
                                                                                            <form id="aiForm-@lesson.LessonId" method="post" asp-page-handler="GenerateAI">
                                                                                                <!-- Hidden field cho LessonId -->
                                                                                                <input type="hidden" asp-for="LessonId" value="@lesson.LessonId" />
                                                                                                <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />

                                                                                                <div class="mb-3">
                                                                                                    <small class="text-danger">
                                                                                                        <i class="bi bi-send-exclamation"></i>
                                                                                                        Please fill out all course fields before using this feature (Only For Premium)!
                                                                                                    </small>
                                                                                                    <label class="form-label">Topic/Content for AI Generation *</label>
                                                                                                    <textarea class="form-control" asp-for="Topic" rows="3" required
                                                                                                              placeholder="Enter the topic or content you want AI to generate questions about..."></textarea>
                                                                                                    <span asp-validation-for="Topic" class="text-danger"></span>
                                                                                                </div>

                                                                                                <div class="mb-3">
                                                                                                    <label class="form-label">Number of Questions</label>
                                                                                                    <select class="form-select" asp-for="Number">
                                                                                                        <option value="3">3 Questions</option>
                                                                                                        <option value="5" selected>5 Questions</option>
                                                                                                        <option value="10">10 Questions</option>
                                                                                                    </select>
                                                                                                    <span asp-validation-for="Number" class="text-danger"></span>
                                                                                                </div>

                                                                                                <div class="d-flex gap-2">
                                                                                                    <button type="submit" class="btn btn-info btn-sm">
                                                                                                        <i class="fa fa-magic me-1"></i>Generate
                                                                                                    </button>
                                                                                                    <button type="button" class="btn btn-secondary btn-sm" onclick="cancelCreateQuestion(@lesson.LessonId)">
                                                                                                        <i class="fa fa-times me-1"></i>Cancel
                                                                                                    </button>
                                                                                                </div>
                                                                                            </form>
                                                                                        </div>

                                                                                        <!-- Loading Spinner -->
                                                                                        <div id="loading-@lesson.LessonId" class="text-center" style="display: none;">
                                                                                            <div class="spinner-border text-primary" role="status">
                                                                                                <span class="visually-hidden">Loading...</span>
                                                                                            </div>
                                                                                            <p class="mt-2">Processing your request...</p>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                            <div id="create-assignment-form-@lesson.LessonId" class="card mt-3" style="display: none;">
                                                                                <div class="card-body p-3">
                                                                                    <form method="post" asp-page-handler="AddAssignment">
                                                                                        <!-- Hidden input for LessonId -->
                                                                                        <input type="hidden" name="Assignment.LessonId" value="@lesson.LessonId" />
                                                                                        <input type="hidden" asp-for="Lesson.ModuleId" value="@module.ModuleId" />
                                                                                        <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />
                                                                                        <div class="mb-3">
                                                                                            <label class="form-label fw-bold">Assignment Question</label>
                                                                                            <textarea class="form-control" name="Assignment.Content" rows="3" placeholder="This Assignment's essay questions and the requirements you want." required></textarea>
                                                                                        </div>
                                                                                        <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />
                                                                                        <div class="row">
                                                                                            <div class="col-12">
                                                                                                <div class="mb-4">
                                                                                                    <label class="form-label fw-bold fs-6 text-dark">
                                                                                                        <i class="bi bi-camera-video me-2"></i>
                                                                                                        Meeting Link
                                                                                                    </label>
                                                                                                    <input type="url"
                                                                                                           class="form-control form-control-lg border-dark"
                                                                                                           name="Assignment.MeetLink"
                                                                                                           style="border: 2px solid #000;"
                                                                                                           placeholder="https://meet.google.com/xxx-xxxx-xxx" />
                                                                                                    <div class="form-text text-muted">
                                                                                                        <i class="bi bi-info-circle me-1"></i>
                                                                                                        Important: If you do not enter this field, we will automatically generate a sample meeting link that will expire in 1 hour. This will impact your experience!
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                        <div class="d-flex justify-content-end gap-2">
                                                                                            <button type="submit" class="btn btn-success btn-sm">
                                                                                                <i class="fa fa-check me-1"></i> Create Assignment
                                                                                            </button>
                                                                                            <button type="button" class="btn btn-secondary btn-sm" onclick="cancelCreateAssignment(@lesson.LessonId)">
                                                                                                <i class="fa fa-times me-1"></i> Cancel
                                                                                            </button>
                                                                                        </div>
                                                                                    </form>
                                                                                </div>

                                                                                <!-- Loading Spinner -->
                                                                                <div id="loading-@lesson.LessonId" class="text-center" style="display: none;">
                                                                                    <div class="spinner-border text-primary" role="status">
                                                                                        <span class="visually-hidden">Loading...</span>
                                                                                    </div>
                                                                                    <p class="mt-2">Processing your request...</p>
                                                                                </div>
                                                                            </div>

                                                                                <!-- Add New Question Button for this Lesson -->
                                                                                <div class="mt-3">
                                                                                    @if (!(lesson.Assignment != null && lesson.Assignment.Any()))
                                                                                    {
                                                                                        <button id="btn-question-@lesson.LessonId"
                                                                                                class="btn btn-outline-primary btn-sm"
                                                                                                onclick="showCreateQuestionForm(@lesson.LessonId)">
                                                                                            <i class="fa fa-plus me-1"></i>Add New Question
                                                                                        </button>
                                                                                    }

                                                                                    @if (!(lesson.Questions.Any() && lesson.Questions.Any(q => q.Answers != null && q.Answers.Any()))
                                                                                                                                                    && !(lesson.Assignment != null && lesson.Assignment.Any()))
                                                                                    {
                                                                                        <button id="btn-assignment-@lesson.LessonId"
                                                                                                class="btn btn-outline-success btn-sm ms-2"
                                                                                                onclick="showCreateAssignmentForm(@lesson.LessonId)">
                                                                                            <i class="fa fa-tasks me-1"></i>Add New Assignment
                                                                                        </button>
                                                                                    }
                                                                                </div>
                                                                            </div>
                                                                        </div>

                                                                            <!-- Form Edit Lesson -->
                                                                            <div id="edit-lesson-form-@lesson.LessonId" class="card mb-3" style="display: none; border: 1px solid #dee2e6; background-color: #f8f9fa;">
                                                                                <div class="card-body">
                                                                                <h6 class="card-title">Edit This Lesson to "@module.Title"</h6>
                                                                                <form method="post" asp-page-handler="EditLesson" enctype="multipart/form-data">
                                                                                        <input type="hidden" asp-for="Lesson.LessonId" value="@lesson.LessonId" />
                                                                                        <input type="hidden" asp-for="Lesson.ModuleId" value="@lesson.ModuleId" />
                                                                                        <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />

                                                                                        <div class="mb-3">
                                                                                            <label class="form-label">Lesson Title *</label>
                                                                                            <input asp-for="Lesson.Title" type="text" class="form-control" id="editLessonTitle-@lesson.LessonId" required />
                                                                                        </div>

                                                                                        <div class="mb-3">
                                                                                            <label class="form-label">Description</label>
                                                                                            <textarea asp-for="Lesson.Description" class="form-control" id="editLessonDescription-@lesson.LessonId" rows="3">@lesson.Description</textarea>
                                                                                        </div>

                                                                                        <div class="mb-3">
                                                                                            <label class="form-label">Document (PDF only) *</label>
                                                                                            @if (!string.IsNullOrEmpty(lesson.DocumentLink))
                                                                                            {
                                                                                                <div class="mb-2">
                                                                                                    <small class="text-muted">Current: </small>
                                                                                                    <a href="@lesson.DocumentLink" target="_blank" class="text-primary open-doc-btn" data-href="@lesson.DocumentLink">
                                                                                                        View Document
                                                                                                    </a>
                                                                                                </div>
                                                                                            }
                                                                                            <input asp-for="Document"
                                                                                                   type="file"
                                                                                                   class="form-control"
                                                                                                   accept=".pdf"
                                                                                                   id="editDocument-@lesson.LessonId"
                                                                                                   data-max-size="10485760" />
                                                                                            <small class="form-text text-muted">
                                                                                                <strong>Only PDF files are allowed (max 10MB).</strong> Leave empty to keep current file
                                                                                            </small>
                                                                                            <div class="invalid-feedback" id="documentError-@lesson.LessonId" style="display: none;"></div>
                                                                                        </div>

                                                                                        <div class="mb-3">
                                                                                            <label class="form-label">Video (optional)</label>
                                                                                            @if (!string.IsNullOrEmpty(lesson.VideoLink))
                                                                                            {
                                                                                                <div class="mb-2">
                                                                                                    <small class="text-muted">Current: </small>
                                                                                                    <a href="@lesson.VideoLink" target="_blank" class="text-primary">
                                                                                                        View Video
                                                                                                    </a>
                                                                                                </div>
                                                                                            }
                                                                                            <input asp-for="Video" type="file" class="form-control" />
                                                                                            <small class="form-text text-muted">Leave empty to keep current file</small>
                                                                                        </div>
                                                                                        <div class="d-flex gap-2">
                                                                                            <button type="submit" class="btn btn-primary btn-sm">
                                                                                                <i class="fa fa-save me-1"></i>Save Changes
                                                                                            </button>
                                                                                            <button type="button" class="btn btn-secondary btn-sm" onclick="cancelEditLesson(@lesson.LessonId)">
                                                                                                <i class="fa fa-times me-1"></i>Cancel
                                                                                            </button>
                                                                                        </div>
                                                                                </form>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>                                                       
                                                        }
                                                        else
                                                        {
                                                            <p class="text-muted">No lessons available in this module.</p>
                                                        }
                                                        <!-- Create Lesson Form for this Module (Hidden by default) -->
                                                        <div id="create-lesson-form-@module.ModuleId" class="card mb-3" style="display: none; border: 1px solid #dee2e6; background-color: #f8f9fa;">
                                                            <div class="card-body">
                                                                <h6 class="card-title">Add New Lesson to "@module.Title"</h6>
                                                                <div class="form-section">
                                                                    <form id="lessonForm-@module.ModuleId" method="post" asp-page-handler="AddLesson" enctype="multipart/form-data">
                                                                        <input type="hidden" asp-for="Lesson.ModuleId" value="@module.ModuleId" />
                                                                        <input type="hidden" asp-for="Module.CourseId" value="@Model.Course.CourseId" />
                                                                        <div class="mb-3">
                                                                            <label asp-for="Lesson.Title" class="form-label">Lesson Title *</label>
                                                                            <input asp-for="Lesson.Title" type="text" class="form-control" id="lessonTitle-@module.ModuleId" required>
                                                                        </div>
                                                                        <div class="mb-3">
                                                                            <label asp-for="Lesson.Description" class="form-label">Description</label>
                                                                            <textarea asp-for="Lesson.Description" class="form-control" id="lessonDescription-@module.ModuleId" rows="3"></textarea>
                                                                        </div>
                                                                        <div class="mb-3">
                                                                            <label class="form-label">Document (PDF only)</label>
                                                                            <input asp-for="Document"
                                                                                   type="file"
                                                                                   class="form-control"
                                                                                   accept=".pdf"
                                                                                   id="createDocument-@module.ModuleId"
                                                                                   data-max-size="10485760" />
                                                                            <small class="form-text text-muted">
                                                                                <strong>Only PDF files are allowed (max 10MB).</strong>
                                                                            </small>
                                                                            <div class="invalid-feedback" id="createDocumentError-@module.ModuleId" style="display: none;"></div>
                                                                        </div>
                                                                        <div class="mb-3">
                                                                            <label class="form-label">Video (optional)</label>
                                                                            <input asp-for="Video" type="file" class="form-control" />
                                                                        </div>
                                                                        <div class="d-flex gap-2">
                                                                            <button type="submit" class="btn btn-primary btn-sm">
                                                                                <i class="fa fa-save me-1"></i>Save Lesson
                                                                            </button>
                                                                            <button type="button" class="btn btn-secondary btn-sm" onclick="cancelCreateLesson(@module.ModuleId)">
                                                                                <i class="fa fa-times me-1"></i>Cancel
                                                                            </button>
                                                                        </div>
                                                                    </form>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <!-- Add New Lesson Button for this Module -->
                                                        <div class="mt-3">
                                                            <button class="btn btn-outline-primary btn-sm" onclick="showCreateLessonForm(@module.ModuleId)">
                                                                <i class="fa fa-plus me-1"></i>Add New Lesson
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <div class="text-center py-5">
                                                <i class="fa fa-book fa-3x text-muted mb-3 d-block"></i>
                                                <p class="text-muted">No modules found. Start by adding your first module.</p>
                                            </div>
                                        }
                                        <!-- Create Module Form (Hidden by default) -->
                                        <div id="create-module-form" class="card mb-3" style="display: none;">
                                            <div class="card-body">
                                                <!-- Module Creation Options -->
                                                <div class="tab-container">
                                                    <div class="tab-nav">
                                                        <button type="button" class="tab-button active" id="manual-@Model.Course.CourseId" onclick="toggleModuleForms(@Model.Course.CourseId, 'manual', this)">
                                                            <i class="fa fa-edit tab-icon"></i>
                                                            Manual Entry
                                                        </button>
                                                        <button type="button" class="tab-button" id="ai-@Model.Course.CourseId" onclick="toggleModuleForms(@Model.Course.CourseId, 'ai', this)">
                                                            <i class="bi bi-openai"></i>
                                                            AI Generate
                                                        </button>
                                                    </div>
                                                </div>
                                                <div class="form-section" id="manual-form-@Model.Course.CourseId">
                                                    <form id="moduleForm" method="post" asp-page-handler="AddModule">
                                                        <input asp-for="Module.CourseId" type="hidden" value="@Model.Course.CourseId" />
                                                        <div class="mb-3">
                                                            <label asp-for="Module.Title" class="form-label">Module Title *</label>
                                                            <input asp-for="Module.Title" type="text" class="form-control" id="moduleTitle" required>
                                                        </div>
                                                        <div class="mb-3">
                                                            <label asp-for="Module.Description" class="form-label">Description</label>
                                                            <textarea asp-for="Module.Description" class="form-control" id="moduleDescription" rows="3"></textarea>
                                                        </div>
                                                        <div class="mb-3">
                                                            <div class="form-check">
                                                                <input asp-for="Module.IsPremium" style="margin-top: 10px;" class="form-check-input" type="checkbox" id="moduleIsPremium">
                                                                <label class="form-check-label" asp-for="Module.IsPremium">Premium Module</label>
                                                            </div>
                                                        </div>
                                                        <div class="d-flex gap-2">
                                                            <button type="submit" class="btn btn-primary">
                                                                <i class="fa fa-save me-1"></i>Save Module
                                                            </button>
                                                            <button type="button" class="btn btn-secondary" onclick="cancelCreateModule()">
                                                                <i class="fa fa-times me-1"></i>Cancel
                                                            </button>
                                                        </div>
                                                    </form>
                                                </div>

                                                <!-- AI Generation Form -->
                                                <div class="form-section" id="ai-form-@Model.Course.CourseId" style="display: none;">
                                                    <form id="aiModuleForm" method="post" asp-page-handler="GenerateModuleByAI">
                                                        <input name="CourseId" type="hidden" value="@Model.Course.CourseId" />
                                                        <div class="mb-3">
                                                            <small class="text-danger">
                                                            <i class="bi bi-send-exclamation"></i>
                                                                Please fill out all course fields before using this feature (Only For Premium)!
                                                            </small>
                                                            <div class="alert alert-info">
                                                                <i class="fa fa-info-circle me-2"></i>
                                                                <strong>AI will generate:</strong> Module title, description, and suggested learning objectives based on your input.
                                                            </div>
                                                        </div>
                                                        <div class="d-flex gap-2">
                                                            <button type="submit" class="btn btn-info btn-sm" id="generateBtn">
                                                                <i class="bi bi-magic me-1"></i>Generate
                                                            </button>
                                                            <button type="button" class="btn btn-secondary" onclick="cancelCreateModule()">
                                                                <i class="fa fa-times me-1"></i>Cancel
                                                            </button>
                                                        </div>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Add New Module Button -->
                                        <div class="text-center mt-4">
                                            <button class="btn btn-primary btn-lg" onclick="showCreateModuleForm()">
                                                <i class="fa fa-plus me-1"></i>Add New Module
                                            </button>
                                        </div>
                                    </div>

                                    <div class="step-navigation mt-4">
                                    <button type="button" class="btn btn-secondary prev-step" data-prev="intended-learners">
                                            <i class="fa fa-arrow-left"></i> Previous
                                        </button>
                                    </div>
                                </div>

                                <!-- Loading Spinner -->
                                <div id="loading-spinner" class="text-center" style="display: none;">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                </div>

                                <!-- Course Stats -->
                                <div class="course-stats bg-light p-3 rounded mb-4">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <strong>Student Count:</strong> @Model.Course.StudentCount
                                        </div>
                                        <div class="col-md-4">
                                            <strong>Last Updated:</strong> @Model.Course.UpdateAt?.ToString("dd/MM/yyyy")
                                        </div>
                                        <div class="col-md-4">
                                            <strong>Content:</strong> @Model.Course.CountModule Modules | @Model.Course.CountLesson Lessons
                                        </div>
                                    </div>
                                </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

 <style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }


    .video-container {
        border-radius: 0.375rem 0.375rem 0 0;
        overflow: hidden;
    }

    .document-container {
        border-radius: 0.375rem 0.375rem 0 0;
        overflow: hidden;
    }

    .bg-gradient-danger {
        background: linear-gradient(135deg, #dc3545, #c82333);
    }

    .bg-gradient-success {
        background: linear-gradient(135deg, #28a745, #20c997);
    }

    .card {
        transition: transform 0.2s ease-in-out;
    }

        .card:hover {
            transform: translateY(-2px);
        }

    /* Custom scrollbar for text content */
    .document-container pre {
        scrollbar-width: thin;
        scrollbar-color: #6c757d #f8f9fa;
    }

        .document-container pre::-webkit-scrollbar {
            width: 8px;
        }

        .document-container pre::-webkit-scrollbar-track {
            background: #f8f9fa;
        }

        .document-container pre::-webkit-scrollbar-thumb {
            background: #6c757d;
            border-radius: 4px;
        }



    .card {
        background: white;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        overflow: hidden;
        max-width: 800px;
        margin: 0 auto;
    }

    .card-body {
        padding: 24px;
    }

    .card-title {
        font-size: 18px;
        font-weight: 600;
        margin-bottom: 24px;
        color: #1a73e8;
    }

    .tab-container {
        position: relative;
        margin-bottom: 32px;
    }

    .tab-nav {
        display: flex;
        border-bottom: 1px solid #e8eaed;
        position: relative;
    }
    .tab-button {
        background: none;
        border: none;
        padding: 16px 24px;
        font-size: 14px;
        font-weight: 500;
        color: #5f6368;
        cursor: pointer;
        transition: all 0.2s ease;
        position: relative;
        display: flex;
        align-items: center;
        gap: 8px;
        min-width: 120px;
        justify-content: center;
    }

        .tab-button:hover {
            color: #1a73e8;
            background-color: rgba(26, 115, 232, 0.04);
        }

        .tab-button.active {
            color: #1a73e8;
            font-weight: 600;
        }

            .tab-button.active::after {
                content: '';
                position: absolute;
                bottom: -1px;
                left: 0;
                right: 0;
                height: 3px;
                background-color: #1a73e8;
                border-radius: 3px 3px 0 0;
            }

    .tab-icon {
        font-size: 16px;
    }
    /* Form Sections */
    .form-section {
        animation: fadeIn 0.3s ease-in-out;
    }

        .form-section.hidden {
            display: none;
        }

    @@keyframes fadeIn {
        from

    {
        opacity: 0;
        transform: translateY(10px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Buttons */
    .btn {
        padding: 12px 24px;
        border: none;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-decoration: none;
    }

    .btn-primary {
        background-color: #1a73e8;
        color: white;
    }

        .btn-primary:hover {
            background-color: #1557b0;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(26, 115, 232, 0.3);
        }

    .btn-success {
        background-color: #34a853;
        color: white;
    }

        .btn-success:hover {
            background-color: #2d8f47;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(52, 168, 83, 0.3);
        }

    .btn-info {
        background-color: #4285f4;
        color: white;
    }

        .btn-info:hover {
            background-color: #3367d6;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(66, 133, 244, 0.3);
        }

    .btn-secondary {
        background-color: #f8f9fa;
        color: #5f6368;
        border: 1px solid #e8eaed;
    }

        .btn-secondary:hover {
            background-color: #e8eaed;
            transform: translateY(-1px);
        }

    .d-flex {
        display: flex;
    }

    .gap-2 {
        gap: 12px;
    }

    /* Alert Styling */
    .alert {
        padding: 16px;
        border-radius: 8px;
        margin-bottom: 20px;
        border-left: 4px solid #4285f4;
    }

    .alert-info {
        background-color: #e8f0fe;
        color: #1a73e8;
    }

    .alert h6 {
        margin-bottom: 12px;
        font-weight: 600;
    }

    .alert ul {
        margin-left: 20px;
    }

    .alert li {
        margin-bottom: 4px;
    }

    /* Form Text */
    .form-text {
        font-size: 13px;
        color: #5f6368;
        margin-top: 8px;
    }

        .form-text a {
            color: #1a73e8;
            text-decoration: none;
        }

            .form-text a:hover {
                text-decoration: underline;
            }

    /* Loading Spinner */
    .loading {
        text-align: center;
        padding: 40px;
    }

    .spinner-border {
        width: 32px;
        height: 32px;
        border: 3px solid #e8eaed;
        border-top: 3px solid #1a73e8;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }

    .loading p {
        margin-top: 16px;
        color: #5f6368;
        font-size: 14px;
    }

    .hidden {
        display: none;
    }


        .lesson-form {
            animation: slideDown 0.3s ease-out;
        }

        @@keyframes slideDown {
            from

        {
            opacity: 0;
            transform: translateY(-10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        .module-card {
            transition: box-shadow 0.3s ease;
        }

            .module-card:hover {
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            }

        .btn-group .btn {
            margin-left: 2px;
        }

        .spinner-border {
            width: 2rem;
            height: 2rem;
        }

        /* Course Sidebar Styles
        .course-sidebar {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            position: sticky;
            top: 20px;
        }

            .course-sidebar h5 {
                font-size: 14px;
                font-weight: 600;
                color: #333;
                margin-bottom: 15px;
                text-transform: uppercase;
            }

            .course-sidebar .nav-link {
                color: #666;
                padding: 8px 0;
                border: none;
                border-radius: 0;
                background: none;
                display: flex;
                align-items: center;
                cursor: pointer;
                transition: color 0.2s ease;
            }

                .course-sidebar .nav-link:hover {
                    color: #007bff;
                }

                .course-sidebar .nav-link.active {
                    color: #007bff;
                    background: none;
                    font-weight: 500;
                }

        /* Step Number Styles */
        .step-number {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #e9ecef;
            color: #666;
            font-size: 12px;
            margin-right: 10px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

            .step-number i {
                color: #28a745;
                font-size: 10px;
            }

        .nav-link.active .step-number {
            background: #cbcddb;
            color: white;
        }

        .step-number.completed {
            /* background: #28a745; */
            color: white;
        }

        /* Content Section Styles */
        .content-section {
            padding: 20px;
        }

        .step-header {
            margin-bottom: 30px;
            padding: 20px;
            background: linear-gradient(135deg, #088dcd 0%, #152b3f 100%);
            border-radius: 10px;
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

            .step-header h2 {
                margin: 0;
                font-size: 24px;
                font-weight: 600;
            }

        .step-badge {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 30px;
            height: 30px;
            background: rgba(255,255,255,0.2);
            border-radius: 50%;
            margin-right: 10px;
            font-weight: bold;
            font-size: 16px;
        }

        .step-description {
            margin: 10px 0 0 0;
            font-size: 14px;
            opacity: 0.9;
            line-height: 1.5;
        }

        /* Form Section Styles */
        .form-section {
            background: white;
            padding: 25px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            margin-bottom: 20px;
            border: 1px solid #e9ecef;
        }

            .form-section .form-label {
                font-weight: 600;
                color: #333;
                margin-bottom: 8px;
            }

            .form-section .form-control {
                border-radius: 6px;
                border: 1px solid #ddd;
                padding: 4px 4px;
                transition: border-color 0.2s ease;
            }

                .form-section .form-control:focus {
                    border-color: #007bff;
                    box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
                }

        /* Step Navigation Styles */
        .step-navigation {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px;
            border-top: 1px solid #e9ecef;
            background: #f8f9fa;
            border-radius: 0 0 10px 10px;
        }

            .step-navigation .btn {
                padding: 8px 16px;
                border-radius: 6px;
                font-weight: 500;
            }

        p {
            color: white;
        }


        /* Learning Objectives Styles */
        .learning-objectives .input-group {
            margin-bottom: 10px;
        }

        .learning-objectives .input-group-text {
            background: #f8f9fa;
            border: 1px solid #ddd;
            color: #666;
            font-size: 12px;
            min-width: 40px;
            justify-content: center;
        }

        .add-more-btn {
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            color: #007bff;
            transition: color 0.2s ease;
        }

            .add-more-btn:hover {
                text-decoration: underline;
                color: #0056b3;
            }

        /* Module Card Styles */
        .module-card {
            border: 1px solid #dee2e6;
            transition: all 0.15s ease-in-out;
            overflow: hidden;
        }

            .module-card:hover {
                box-shadow: 0 0.125rem 0.25rem rgba(0,0,0,.075);
                transform: translateY(-1px);
            }

            .module-card .card-header {
                background: #f8f9fa;
                border-bottom: 1px solid #dee2e6;
                padding: 15px 20px;
            }

                .module-card .card-header h5 {
                    color: #333;
                    font-weight: 600;
                    margin: 0;
                }

            .module-card .card-body {
                padding: 20px;
            }

        /* Lessons List Styles */
        .lessons-list {
            margin-top: -15px;
        }

            .lessons-list h6 {
                color: #333;
                font-weight: 600;
                margin-bottom: 10px;
                font-size: 14px;
            }

            .lessons-list .list-group-item {
                padding: 12px 15px;
                border: 1px solid #e9ecef;
                background: #fff;
                /* display: flex; */
                justify-content: space-between;
                align-items: center;
                transition: background-color 0.2s ease;
            }

                .lessons-list .list-group-item:hover {
                    background: #f8f9fa;
                }

                .lessons-list .list-group-item i {
                    margin-right: 8px;
                }

        /* Course Stats Styles */
        .course-stats {
            background: #f8f9fa !important;
            border: 1px solid #e9ecef;
            margin-bottom: 20px;
        }

            .course-stats strong {
                color: #333;
                font-weight: 600;
            }

        /* Upload Placeholder Styles */
        .upload-placeholder {
            text-align: center;
            padding: 40px;
            border: 2px dashed #dee2e6;
            border-radius: 8px;
            background: #f8f9fa;
        }

            .upload-placeholder i {
                color: #adb5bd;
                margin-bottom: 10px;
            }

            .upload-placeholder p {
                color: #6c757d;
                margin: 0;
            }

        /* Badge Styles */
        .badge {
            font-size: 11px;
            padding: 4px 8px;
            font-weight: 500;
        }

        /* Button Group Styles */
        .btn-group .btn {
            font-size: 12px;
            padding: 4px 8px;
        }

        .btn-primary {
            color: #fff;
            background-color: #088dcd;
            border-color: #088dcd;
        }


        /* Responsive Design */
        @@media (max-width: 768px) {
            .course-sidebar {
                position: static;
                margin-bottom: 20px;
            }

            .step-navigation {
                flex-direction: column;
                gap: 10px;
            }

                .step-navigation .btn {
                    width: 100%;
                }

            .module-card .card-header .row {
                flex-direction: column;
                gap: 10px;
            }

            .btn-group {
                flex-wrap: wrap;
                gap: 5px;
            }

            .course-stats .row {
                text-align: center;
            }

            .course-stats .col-md-4 {
                margin-bottom: 10px;
            }
        }

        /* Form Validation Styles */
        .form-control.is-invalid {
            border-color: #dc3545;
        }

        .form-control.is-valid {
            border-color: #28a745;
        }

        .invalid-feedback {
            color: #dc3545;
            font-size: 12px;
            margin-top: 5px;
        }

        .valid-feedback {
            color: #28a745;
            font-size: 12px;
            margin-top: 5px;
        }

        /* Animation for step transitions */
        .content-section {
            animation: fadeIn 0.3s ease-in-out;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Loading states */
        .btn.loading {
            position: relative;
            color: transparent;
        }

            .btn.loading::after {
                content: '';
                position: absolute;
                width: 16px;
                height: 16px;
                top: 50%;
                left: 50%;
                margin-left: -8px;
                margin-top: -8px;
                border: 2px solid #ffffff;
                border-radius: 50%;
                border-top-color: transparent;
                animation: spin 1s linear infinite;
            }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
    </style>

 <script>
        // Course Editor Step Navigation Script - Fixed Version
        document.addEventListener('DOMContentLoaded', function() {

            // Initialize step navigation
            initializeStepNavigation();

            function initializeStepNavigation() {
                // Show first step by default
                showStep('course-info');
                updateActiveStepInSidebar('course-info');

                // Add event listeners for sidebar navigation
                addSidebarEventListeners();

                // Add event listeners for next/previous buttons
                addNavigationButtonListeners();

                // Add event listeners for learning objectives
                addLearningObjectivesListeners();

                // Add form validation
                addFormValidation();


                // Update progress on page load
                updateProgress();
            }

            function addSidebarEventListeners() {
                const stepLinks = document.querySelectorAll('.step-link');

                stepLinks.forEach(link => {
                    link.addEventListener('click', function(e) {
                        e.preventDefault();
                        const targetStep = this.getAttribute('data-step');

                        // Allow free navigation to any step
                        showStep(targetStep);
                        updateActiveStepInSidebar(targetStep);
                    });
                });
            }

            function addNavigationButtonListeners() {
                // Next step buttons
                const nextButtons = document.querySelectorAll('.next-step');
                nextButtons.forEach(button => {
                    button.addEventListener('click', function(e) {
                        e.preventDefault(); // Prevent default form submission
                        const currentStep = getCurrentStep();
                        const nextStep = this.getAttribute('data-next');

                        // Validate current step but don't prevent navigation
                        if (validateCurrentStep(currentStep)) {
                            updateStepCompletion(currentStep);
                            showNotification('Step completed successfully!', 'success', 2000);
                        } else {
                            showNotification('Some fields may need attention, but you can continue.', 'warning', 3000);
                        }

                        showStep(nextStep);
                        updateActiveStepInSidebar(nextStep);
                    });
                });

                // Previous step buttons
                const prevButtons = document.querySelectorAll('.prev-step');
                prevButtons.forEach(button => {
                    button.addEventListener('click', function(e) {
                        e.preventDefault(); // Prevent default form submission
                        const prevStep = this.getAttribute('data-prev');
                        showStep(prevStep);
                        updateActiveStepInSidebar(prevStep);
                    });
                });
            }

            function showStep(stepId) {
                // Hide all content sections
                const allSections = document.querySelectorAll('.content-section');
                allSections.forEach(section => {
                    section.style.display = 'none';
                });

                // Show target section with animation
                const targetSection = document.getElementById(stepId);
                if (targetSection) {
                    targetSection.style.display = 'block';
                    targetSection.style.opacity = '0';

                    // Animate fade in
                    setTimeout(() => {
                        targetSection.style.transition = 'opacity 0.3s ease-in-out';
                        targetSection.style.opacity = '1';
                    }, 10);

                    // Scroll to top of form
                    targetSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            }

            function updateActiveStepInSidebar(stepId) {
                // Remove active class from all nav links
                const allNavLinks = document.querySelectorAll('.step-link');
                allNavLinks.forEach(link => {
                    link.classList.remove('active');
                });

                // Add active class to current step
                const currentNavLink = document.querySelector(`[data-step="${stepId}"]`);
                if (currentNavLink) {
                    currentNavLink.classList.add('active');
                }
            }

            function getCurrentStep() {
                const visibleSection = document.querySelector('.content-section[style*="display: block"], .content-section:not([style*="display: none"])');
                return visibleSection ? visibleSection.id : 'course-info';
            }

            function validateCurrentStep(stepId) {
                switch(stepId) {
                    case 'course-info':
                        return validateCourseInfo();
                    case 'category-description':
                        return validateCategoryDescription();
                    case 'skill-learn':
                        return validateSkillLearn();
                    case 'pricing-duration':
                        return validatePricingDuration();
                    case 'course-image':
                        return validateCourseImage();
                    case 'requirement':
                        return validateRequirement();
                    case 'level-language':
                        return validateLevelLanguage();
                    case 'intended-learners':
                        return validateIntendedLearners();
                    case 'curriculum':
                        return validateCurriculum();
                    default:
                        return true;
                }
            }

            function validateCourseInfo() {
                const courseName = document.querySelector('input[name="Course.CourseName"]');
                return courseName && courseName.value.trim().length > 0;
            }

            function validateCategoryDescription() {
                const categoryId = document.querySelector('select[name="Course.CategoryId"]');
                const courseContent = document.querySelector('textarea[name="Course.CourseContent"]');

                const categoryValid = categoryId && categoryId.value && categoryId.value !== "";
                const contentValid = courseContent && courseContent.value.trim().length >= 100;

                // Update visual feedback for category select
                if (categoryId) {
                    categoryId.classList.remove('is-valid', 'is-invalid');
                    if (categoryValid) {
                        categoryId.classList.add('is-valid');
                    } else {
                        categoryId.classList.add('is-invalid');
                    }
                }

                // Update visual feedback for course content
                if (courseContent) {
                    courseContent.classList.remove('is-valid', 'is-invalid');
                    if (contentValid) {
                        courseContent.classList.add('is-valid');
                    } else {
                        courseContent.classList.add('is-invalid');
                    }
                }

                return categoryValid && contentValid;
            }

           function validateSkillLearn() {
                const skillTextArea = document.querySelector('textarea[name="Course.SkillLearn"]');
                return skillTextArea && skillTextArea.value.trim().length >= 50;
           }

            function validatePricingDuration() {
                const cost = document.querySelector('input[name="Course.Cost"]');
                const duration = document.querySelector('input[name="Course.CourseLength"]');

                return (cost && cost.value >= 0) && (duration && duration.value.trim().length > 0);
            }

            function validateCourseImage() {
                const existingImage = document.querySelector('img[alt="Course Image"]');
                const newImageInput = document.querySelector('input[name="NewImage"]');

                return existingImage || (newImageInput && newImageInput.files.length > 0);
            }

            function validateRequirement() {
                const skillTextArea = document.querySelector('textarea[name="Course.Requirement"]');
                return skillTextArea && skillTextArea.value.trim().length >= 50;
            }

            function validateLevelLanguage() {
                const level = document.querySelector('select[name="Course.Level"]'); // Changed from input to select
                const language = document.querySelector('input[name="Course.Language"]');

                // Check if level is selected (not empty or default value)
                const levelValid = level && level.value && level.value.trim().length > 0;

                // Check if language is filled
                const languageValid = language && language.value.trim().length > 0;

                return levelValid && languageValid;
            }

            function validateIntendedLearners() {
                const skillTextArea = document.querySelector('textarea[name="Course.IntendedLearner"]');
                return skillTextArea && skillTextArea.value.trim().length >= 50;
            }

            function validateCurriculum() {
                const moduleCards = document.querySelectorAll('.module-card');
                return moduleCards.length > 0;
            }

            function updateStepCompletion(stepId) {
                const stepLink = document.querySelector(`[data-step="${stepId}"]`);
                if (stepLink) {
                    const stepNumber = stepLink.querySelector('.step-number');

                    // Add check icon if step is completed
                    if (validateCurrentStep(stepId)) {
                        stepNumber.innerHTML = '<i class="fa fa-check"></i>';
                        stepNumber.classList.add('completed');
                    }
                }
            }

            function addLearningObjectivesListeners() {
                const addMoreBtn = document.querySelector('.add-more-btn');
                if (addMoreBtn) {
                    addMoreBtn.addEventListener('click', function(e) {
                        e.preventDefault(); // Prevent form submission
                        addLearningObjective();
                    });
                }
            }

            function addFormValidation() {
                // Real-time validation for form fields (non-blocking)
                const inputs = document.querySelectorAll('input, textarea, select');

                inputs.forEach(input => {
                    input.addEventListener('blur', function() {
                        validateField(this);
                    });

                    input.addEventListener('input', function() {
                        // clearFieldError(this);
                        // Update step completion status when fields change
                        const currentStep = getCurrentStep();
                        if (validateCurrentStep(currentStep)) {
                            updateStepCompletion(currentStep);
                        }
                    });
                });
                addTextareaFormatting();
            }

            function addTextareaFormatting() {
                const skillLearnTextarea = document.querySelector('textarea[name="Course.SkillLearn"]');
                const requirementTextarea = document.querySelector('textarea[name="Course.Requirement"]');
                const intendedlearnerTextarea = document.querySelector('textarea[name="Course.IntendedLearner"]');

                    [skillLearnTextarea, requirementTextarea,intendedlearnerTextarea].forEach(textarea => {
                    if (textarea) {
                        textarea.addEventListener('input', function(e) {
                            autoFormatTextarea(this);
                        });

                        // Also format on paste
                        textarea.addEventListener('paste', function(e) {
                            setTimeout(() => {
                                autoFormatTextarea(this);
                            }, 10);
                        });
                    }
                });
            }

            function autoFormatTextarea(textarea) {
                const cursorPosition = textarea.selectionStart;
                let text = textarea.value;

                // Split by periods and rejoin with period + newline
                // But avoid splitting on common abbreviations or decimal numbers
                const sentences = text.split(/\.(?!\d)(?!\s*[a-z])/);

                // Process each sentence
                let formattedText = '';
                for (let i = 0; i < sentences.length; i++) {
                    let sentence = sentences[i].trim();

                    if (sentence.length > 0) {
                        // Add the sentence
                        formattedText += sentence;

                        // Add period if it's not the last sentence or if the original had a period
                        if (i < sentences.length - 1 || text.endsWith('.')) {
                            formattedText += '.';

                            // Add newline if it's not the last sentence and there's more content
                            if (i < sentences.length - 1 && sentences[i + 1].trim().length > 0) {
                                formattedText += '\n';
                            }
                        }
                    }
                }

                // Only update if the text actually changed
                if (formattedText !== text) {
                    textarea.value = formattedText;

                    // Restore cursor position (approximately)
                    let newCursorPosition = Math.min(cursorPosition, formattedText.length);
                    textarea.setSelectionRange(newCursorPosition, newCursorPosition);
                }
            }

            function validateField(field) {
                const value = field.value.trim();
                const fieldName = field.name;

                // Remove existing validation classes
                field.classList.remove('is-valid', 'is-invalid');

                // Add validation based on field type (visual feedback only)
                if (field.hasAttribute('required') && !value) {
                    field.classList.add('is-invalid');
                    return false;
                }

                // Special handling for Course.Level select
                if (fieldName === 'Course.Level') {
                    if (!value || value === '') {
                        field.classList.add('is-invalid');
                        return false;
                    }
                    field.classList.add('is-valid');
                    return true;
                }

                if (fieldName === 'Course.CourseContent' && value.length < 100) {
                    field.classList.add('is-invalid');
                    return false;
                }

                if (field.type === 'number' && value < 0) {
                    field.classList.add('is-invalid');
                    return false;
                }

                field.classList.add('is-valid');
                return true;
            }

            function clearFieldError(field) {
                field.classList.remove('is-invalid');
            }

            

            function showNotification(message, type = 'info', duration = 5000) {
                // Remove existing notifications
                const existingNotifications = document.querySelectorAll('.notification-toast');
                existingNotifications.forEach(notification => notification.remove());

                // Create notification element
                const notification = document.createElement('div');
                notification.className = `notification-toast alert alert-${getBootstrapAlertClass(type)} alert-dismissible fade show`;
                notification.style.cssText = `
                    position: fixed;
                    top: 20px;
                    right: 20px;
                    z-index: 9999;
                    min-width: 300px;
                    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                `;

                notification.innerHTML = `
                    <div class="d-flex align-items-center">
                        <i class="fa ${getNotificationIcon(type)} me-2"></i>
                        <span>${message}</span>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;

                document.body.appendChild(notification);

                // Auto-remove notification
                if (duration > 0) {
                    setTimeout(() => {
                        if (notification.parentNode) {
                            notification.classList.remove('show');
                            setTimeout(() => notification.remove(), 150);
                        }
                    }, duration);
                }
            }

            function getBootstrapAlertClass(type) {
                const typeMap = {
                    'success': 'success',
                    'error': 'danger',
                    'warning': 'warning',
                    'info': 'info'
                };
                return typeMap[type] || 'info';
            }

            function getNotificationIcon(type) {
                const iconMap = {
                    'success': 'fa-check-circle',
                    'error': 'fa-exclamation-circle',
                    'warning': 'fa-exclamation-triangle',
                    'info': 'fa-info-circle'
                };
                return iconMap[type] || 'fa-info-circle';
            }

            // Delete course confirmation
            window.submitDeleteForm = function() {
                if (confirm('Are you sure you want to delete this course? This action cannot be undone.')) {
                    document.getElementById('deleteCourseForm').submit();
                }
            };

            // Progress tracking - Updated to show completion status without blocking
            function updateProgress() {
                const totalSteps = 9;
                const completedSteps = document.querySelectorAll('.step-number i.fa-check').length;
                const progressPercentage = (completedSteps / totalSteps) * 100;

                // Update progress bar if exists
                const progressBar = document.querySelector('.progress-bar');
                if (progressBar) {
                    progressBar.style.width = progressPercentage + '%';
                    progressBar.setAttribute('aria-valuenow', progressPercentage);
                }

                // Update submit button state - Always enabled
                const submitButton = document.querySelector('.btn-primary.w-100, .btn-success');
                if (submitButton) {
                    submitButton.disabled = false;

                    if (completedSteps === totalSteps) {
                        submitButton.textContent = 'Complete Setup - All steps completed!';
                        submitButton.classList.remove('btn-secondary');
                        submitButton.classList.add('btn-success');
                    } else {
                        submitButton.textContent = `Complete Setup (${completedSteps}/${totalSteps} steps completed)`;
                        submitButton.classList.remove('btn-secondary');
                        submitButton.classList.add('btn-primary');
                    }
                }
            }

            // Update progress when steps are completed
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type === 'childList' || mutation.type === 'attributes') {
                        updateProgress();
                    }
                });
            });

            // Observe step numbers for changes
            const stepNumbers = document.querySelectorAll('.step-number');
            stepNumbers.forEach(stepNumber => {
                observer.observe(stepNumber, {
                    childList: true,
                    attributes: true,
                    attributeFilter: ['class']
                });
            });

            // Keyboard navigation
            document.addEventListener('keydown', function(e) {
                if (e.ctrlKey || e.metaKey) {
                    switch(e.key) {
                        case 'ArrowRight':
                            e.preventDefault();
                            const nextBtn = document.querySelector('.next-step:visible');
                            if (nextBtn) nextBtn.click();
                            break;
                        case 'ArrowLeft':
                            e.preventDefault();
                            const prevBtn = document.querySelector('.prev-step:visible');
                            if (prevBtn) prevBtn.click();
                            break;
                    }
                }
            });

            // FIXED: Form submit handler - Allow form submission
            const form = document.getElementById('editCourseForm');
            if (form) {
                // Remove any existing submit event listeners that might be preventing submission
                form.addEventListener('submit', function(e) {
                    // Don't prevent default submission - let the form submit normally
                    const completedSteps = document.querySelectorAll('.step-number i.fa-check').length;
                    const totalSteps = 9;

                    // Only show confirmation if steps are incomplete, but don't prevent submission
                    if (completedSteps < totalSteps) {
                        const confirmSubmit = confirm(
                            `You have completed ${completedSteps} out of ${totalSteps} steps. ` +
                            'Are you sure you want to submit the course with incomplete information?'
                        );

                        if (!confirmSubmit) {
                            e.preventDefault();
                            return false;
                        }
                    }

                    // Show submitting notification but allow form to submit
                    showNotification('Submitting course...', 'info', 1000);

                    // Don't prevent default - let form submit naturally
                    return true;
                });
            }

            // Ensure submit buttons are not disabled
            const submitButtons = document.querySelectorAll('button[type="submit"], input[type="submit"]');
            submitButtons.forEach(button => {
                button.disabled = false;
                button.style.pointerEvents = 'auto';
            });

            console.log('Course Editor Step Navigation initialized successfully - Submit button enabled');
        });
    </script>

 <script>
        // JavaScript functions for handling forms
        function showCreateModuleForm() {
            document.getElementById('create-module-form').style.display = 'block';
        }

        function cancelCreateModule() {
            document.getElementById('create-module-form').style.display = 'none';
            // Reset form
            document.getElementById('moduleForm').reset();
        }

        function showCreateLessonForm(moduleId) {
            document.getElementById('create-lesson-form-' + moduleId).style.display = 'block';
        }

              function showCreateAssignmentForm(lessonId) {
        // Ẩn tất cả form assignment khác
        document.querySelectorAll('[id^="create-assignment-form-"]').forEach(form => {
            form.style.display = 'none';
        });

        // Hiện lại tất cả nút assignment & question
        document.querySelectorAll('[id^="btn-assignment-"]').forEach(btn => {
            btn.style.display = 'inline-block';
        });
        document.querySelectorAll('[id^="btn-question-"]').forEach(btn => {
            btn.style.display = 'inline-block';
        });

        // Ẩn nút đang bấm
        const assignmentBtn = document.getElementById('btn-assignment-' + lessonId);
        if (assignmentBtn) assignmentBtn.style.display = 'none';

        const questionBtn = document.getElementById('btn-question-' + lessonId);
        if (questionBtn) questionBtn.style.display = 'none';

        // Hiện form tạo assignment
        const form = document.getElementById('create-assignment-form-' + lessonId);
        if (form) {
            form.style.display = 'block';
            const titleInput = form.querySelector('input[name="AssignmentTitle"]');
            if (titleInput) titleInput.focus();
        }
    }


        function cancelCreateLesson(moduleId) {
            document.getElementById('create-lesson-form-' + moduleId).style.display = 'none';
            // Reset form
            document.getElementById('lessonForm-' + moduleId).reset();
        }

        function editModule(moduleId, title, description, isPremium) {
            // Ẩn phần hiển thị thông tin module
            const displayDiv = document.getElementById(`module-display-${moduleId}`);
            const editForm = document.getElementById(`edit-module-form-${moduleId}`);
            if (displayDiv && editForm) {
                displayDiv.style.display = "none";
                editForm.style.display = "block";

                // Gán dữ liệu
                document.getElementById(`editTitle-${moduleId}`).value = title;
                document.getElementById(`editDescription-${moduleId}`).value = description;
                document.getElementById(`editIsPremium-${moduleId}`).checked = (isPremium === "true" || isPremium === true);
            }
        }

         function cancelCreateAssignment(lessonId) {
            const form = document.getElementById('create-assignment-form-' + lessonId);
            if (form) {
                    form.style.display = 'none';
                    const assignmentForm = document.getElementById('assignmentForm-' + lessonId);
                    if (assignmentForm) assignmentForm.reset();
            }

            // Hiện lại nút assignment và question
            const assignmentBtn = document.getElementById('btn-assignment-' + lessonId);
            if (assignmentBtn) assignmentBtn.style.display = 'inline-block';

            const questionBtn = document.getElementById('btn-question-' + lessonId);
            if (questionBtn) questionBtn.style.display = 'inline-block';
         }

        function cancelEditModule(moduleId) {
            // Hiện lại phần display
            const displayDiv = document.getElementById(`module-display-${moduleId}`);
            const editForm = document.getElementById(`edit-module-form-${moduleId}`);
            if (displayDiv && editForm) {
                displayDiv.style.display = "block";
                editForm.style.display = "none";
            }
        }


        function EditAssignment(id) {
            document.getElementById('assignment-display-' + id).style.display = 'none';
            document.getElementById('edit-assignment-form-' + id).style.display = 'block';
        }

        function CancelEditAssignment(id) {
            document.getElementById('assignment-display-' + id).style.display = 'block';
            document.getElementById('edit-assignment-form-' + id).style.display = 'none';
        }

        
        function editLesson(lessonId, title, description) {
            const displayDiv = document.getElementById(`lesson-display-${lessonId}`);
            const titleInput = document.getElementById(`editLessonTitle-${lessonId}`);
            const desciptionInput = document.getElementById(`editLessonDescription-${lessonId}`);
            const form = document.getElementById(`edit-lesson-form-${lessonId}`);
            const createForm = document.getElementById(`create-lesson-form-${lessonId}`);

            if (displayDiv) displayDiv.style.display = 'none';
            if (titleInput) titleInput.value = title;
            if(desciptionInput) desciptionInput.value = description;
            if (form) form.style.display = 'block';
            if (createForm) createForm.style.display = 'none';
        }

        function cancelEditLesson(lessonId) {
            const displayDiv = document.getElementById(`lesson-display-${lessonId}`);
            const form = document.getElementById(`edit-lesson-form-${lessonId}`);

            if (displayDiv) displayDiv.style.display = 'block';
            if (form) form.style.display = 'none';
        }

        // Show/Hide forms based on selected option
        document.addEventListener('DOMContentLoaded', function() {
            // Add event listeners for radio buttons
            const lessons = document.querySelectorAll('[id^="create-question-form-"]');
            lessons.forEach(function(lessonForm) {
                const lessonId = lessonForm.id.replace('create-question-form-', '');
                const radios = lessonForm.querySelectorAll(`input[name="questionOption-${lessonId}"]`);
                radios.forEach(function(radio) {
                    radio.addEventListener('change', function() {
                        toggleQuestionForms(lessonId, this.value);
                    });
                });
            });
        });

        async function confirmDeleteAssignment(assignmentId) {
            if (!confirm("Are you sure you want to delete this assignment?")) {
                return;
            }

            try {
                // Lấy token từ cookie (hoặc nơi bạn lưu)
                const token = document.cookie
                    .split('; ')
                    .find(row => row.startsWith('AccessToken'))
                    ?.split('=')[1];

                const response = await fetch(`${BaseUrl}/Assignment/${assignmentId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });

                if (response.ok) {
                    // Reload page after delete
                    location.reload();
                } else {
                    const error = await response.text();
                    alert("Delete failed: " + error);
                }
            } catch (err) {
                alert("An error occurred: " + err.message);
            }
        }
        function showCreateQuestionForm(lessonId) {
            // Hide all other create question forms first
            document.querySelectorAll('[id^="create-question-form-"]').forEach(form => {
                form.style.display = 'none';
            });
            // Show all "Add New Question" buttons first
            document.querySelectorAll('[onclick^="showCreateQuestionForm"]').forEach(btn => {
                btn.style.display = 'inline-block';
            });
            // Hide the specific "Add New Question" button for this lesson
            const button = document.querySelector(`[onclick="showCreateQuestionForm(${lessonId})"]`);
            if (button) {
                button.style.display = 'none';
            }
            // Show the specific form for this lesson
            const form = document.getElementById('create-question-form-' + lessonId);
            if (form) {
                form.style.display = 'block';
                // Reset to manual form by default
                document.getElementById(`manual-${lessonId}`).checked = true;
                toggleQuestionForms(lessonId, 'manual');
                // Focus on the question text area
                const textArea = document.getElementById('questionText-' + lessonId);
                if (textArea) {
                    textArea.focus();
                }
            }
        }

        function switchTab(tabName, clickedButton) {
            // Remove active class from all tab buttons
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });

            // Add active class to clicked tab button
            clickedButton.classList.add('active');

            // Hide all form sections
            document.querySelectorAll('.form-section').forEach(section => {
                section.classList.add('hidden');
            });

            // Show selected form section
            document.getElementById(tabName + '-form').classList.remove('hidden');
        }

        function showExcelFormat(event) {
            // Prevent default behavior and stop propagation
            if (event) {
                event.preventDefault();
                event.stopPropagation();
            }

            const formatInfo = document.getElementById(`excel-format-info`);
            formatInfo.style.display = formatInfo.style.display === 'none' ? 'block' : 'none';
        }

    function toggleQuestionForms(lessonId, selectedOption, clickedButton) {
        // Remove active class from all tab buttons in this lesson
        const tabButtons = document.querySelectorAll(`[id*="${lessonId}"].tab-button`);
        tabButtons.forEach(btn => {
            btn.classList.remove('active');
        });

        // Add active class to clicked tab button (chỉ khi tồn tại)
        if (clickedButton) {
            clickedButton.classList.add('active');
        }

        // Hide all forms for this lesson (chỉ khi tồn tại)
        const manualForm = document.getElementById(`manual-form-${lessonId}`);
        if (manualForm) manualForm.style.display = 'none';

        const excelForm = document.getElementById(`excel-form-${lessonId}`);
        if (excelForm) excelForm.style.display = 'none';

        const aiForm = document.getElementById(`ai-form-${lessonId}`);
        if (aiForm) aiForm.style.display = 'none';

        // Show selected form (chỉ khi tồn tại)
        const selectedForm = document.getElementById(`${selectedOption}-form-${lessonId}`);
        if (selectedForm) selectedForm.style.display = 'block';
    }

        

        function cancelCreateQuestion(lessonId) {
            // Hide the form
            const form = document.getElementById('create-question-form-' + lessonId);
            if (form) {
                form.style.display = 'none';
                // Reset all forms
                const questionForm = document.getElementById('questionForm-' + lessonId);
                if (questionForm) {
                    questionForm.reset();
                }
                const excelForm = document.getElementById('excelForm-' + lessonId);
                if (excelForm) {
                    excelForm.reset();
                }
                const aiForm = document.getElementById('aiForm-' + lessonId);
                if (aiForm) {
                    aiForm.reset();
                }
            }

            // Hide loading
            const loading = document.getElementById(`loading-${lessonId}`);
            if (loading) {
                loading.style.display = 'none';
            }

            // Hide format info
            const formatInfo = document.getElementById('excel-format-info');
            if (formatInfo) {
                formatInfo.style.display = 'none';
            }

            // Show the "Add New Question" button again
            const button = document.querySelector(`[onclick="showCreateQuestionForm(${lessonId})"]`);
            if (button) {
                button.style.display = 'inline-block';
            }
        }

         // JavaScript functions for handling edit question functionality
        function editQuestion(questionId, questionText, questionType) {
            // Hide the display and show the edit form
            document.getElementById('question-display-' + questionId).style.display = 'none';
            document.getElementById('edit-question-form-' + questionId).style.display = 'block';

            // Populate the form fields
            document.getElementById('editQuestionText-' + questionId).value = questionText;
            document.getElementById('editQuestionType-' + questionId).value = questionType;
        }

        function cancelEditQuestion(questionId) {
            // Hide the edit form and show the display
            document.getElementById('edit-question-form-' + questionId).style.display = 'none';
            document.getElementById('question-display-' + questionId).style.display = 'block';
        }

        // Show/hide loading spinner
        function showLoading() {
            const spinner = document.getElementById('loading-spinner');
            if (spinner) {
                spinner.style.display = 'block';
            }
        }

        function hideLoading() {
            const spinner = document.getElementById('loading-spinner');
            if (spinner) {
                spinner.style.display = 'none';
            }
        }

        // Toggle between Manual and AI forms
        function toggleModuleForms(courseId, formType, clickedButton) {
            // Remove active class from all tab buttons
            const allButtons = document.querySelectorAll('[id^="manual-' + courseId + '"], [id^="ai-' + courseId + '"]');
            allButtons.forEach(button => {
                button.classList.remove('active');
            });

            // Add active class to clicked button
            clickedButton.classList.add('active');

            // Hide all forms
            const manualForm = document.getElementById('manual-form-' + courseId);
            const aiForm = document.getElementById('ai-form-' + courseId);

            if (manualForm) manualForm.style.display = 'none';
            if (aiForm) aiForm.style.display = 'none';

            // Show selected form
            if (formType === 'manual' && manualForm) {
                manualForm.style.display = 'block';
            } else if (formType === 'ai' && aiForm) {
                aiForm.style.display = 'block';
            }
        }

        // Handle AI form submission
        document.addEventListener('DOMContentLoaded', function() {
            const aiForm = document.getElementById('aiModuleForm');
            const generateBtn = document.getElementById('generateBtn');

            if (aiForm && generateBtn) {
                aiForm.addEventListener('submit', function(e) {
                    // Show loading state
                    generateBtn.disabled = true;
                    generateBtn.innerHTML = '<span class="loading-spinner"></span>Generating...';

                    // You can add additional validation here if needed
                });
            }
        });

        // Handle module form submission
        document.addEventListener('DOMContentLoaded', function() {
            const moduleForm = document.getElementById('moduleForm');
            if (moduleForm) {
                moduleForm.addEventListener('submit', function(e) {
                    // Validate form before submission
                    const title = document.getElementById('moduleTitle').value.trim();

                    if (!title) {
                        e.preventDefault();
                        showErrorMessage('Module title is required!');
                        document.getElementById('moduleTitle').focus();
                        return false;
                    }

                    // Show loading khi form được submit
                    showLoading();

                    // Disable submit button để tránh double-click
                    const submitBtn = this.querySelector('button[type="submit"]');
                    if (submitBtn) {
                        submitBtn.disabled = true;
                        submitBtn.innerHTML = '<i class="fa fa-spinner fa-spin me-1"></i>Creating...';
                    }

                    // Let the form submit normally to server
                    return true;
                });
            }
        });

        // JavaScript functions for Answer management
        function showCreateAnswerForm(questionId) {
            document.getElementById('create-answer-form-' + questionId).style.display = 'block';
        }

        function cancelCreateAnswer(questionId) {
            document.getElementById('create-answer-form-' + questionId).style.display = 'none';
        }

        function editAnswer(answerId, answerText, isCorrect) {
            document.getElementById('edit-answer-form-' + answerId).style.display = 'block';
            document.getElementById('editAnswerText-' + answerId).value = answerText;
            document.getElementById('editIsCorrect-' + answerId).checked = isCorrect;
        }

        function cancelEditAnswer(answerId) {
            document.getElementById('edit-answer-form-' + answerId).style.display = 'none';
        }

   

    </script>

    <script>
        function toggleFullscreen(elementId) {
            const element = document.getElementById(elementId);
            if (element) {
                if (element.requestFullscreen) {
                    element.requestFullscreen();
                } else if (element.webkitRequestFullscreen) {
                    element.webkitRequestFullscreen();
                } else if (element.msRequestFullscreen) {
                    element.msRequestFullscreen();
                }
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            // --- Validation for Create Form ---
            const createDocumentInputs = document.querySelectorAll('input[asp-for="Document"]');
            createDocumentInputs.forEach(function(input) {
                if (input.id && input.id.startsWith('createDocument')) {
                    input.addEventListener('change', function(e) {
                        const file = this.files[0];
                        const moduleId = this.id.split('-')[1];
                        const errorDiv = document.getElementById('createDocumentError-' + moduleId);
                        const maxSize = parseInt(this.dataset.maxSize) || 10485760; // 10MB

                        if (file) {
                            let isValid = true;
                            let errorMessage = '';

                            if (!file.name.toLowerCase().endsWith('.pdf')) {
                                isValid = false;
                                errorMessage = 'Only PDF files are allowed.';
                            }
                            if (isValid && file.type !== 'application/pdf') {
                                isValid = false;
                                errorMessage = 'Invalid file type.';
                            }
                            if (isValid && file.size > maxSize) {
                                isValid = false;
                                errorMessage = `File too large. Max ${Math.round(maxSize/1024/1024)}MB.`;
                            }
                            if (isValid && file.size === 0) {
                                isValid = false;
                                errorMessage = 'File is empty.';
                            }

                            if (!isValid) {
                                this.setCustomValidity(errorMessage);
                                this.classList.add('is-invalid');
                                errorDiv.textContent = errorMessage;
                                errorDiv.style.display = 'block';
                                this.value = '';
                                e.preventDefault();
                                return false;
                            } else {
                                this.setCustomValidity('');
                                this.classList.remove('is-invalid');
                                errorDiv.style.display = 'none';
                            }
                        }
                    });

                    // Drag & drop
                    ['dragover', 'dragleave', 'drop'].forEach(evt => {
                        input.addEventListener(evt, function(e) {
                            e.preventDefault();
                            if(evt === 'dragover') this.classList.add('drag-over');
                            if(evt === 'dragleave' || evt === 'drop') this.classList.remove('drag-over');
                            if(evt === 'drop' && e.dataTransfer.files.length > 0) {
                                this.files = e.dataTransfer.files;
                                this.dispatchEvent(new Event('change'));
                            }
                        });
                    });
                }
            });

            // --- Validation for other Document inputs (lesson) ---
            const documentInputs = document.querySelectorAll('input[asp-for="Document"]');
            documentInputs.forEach(function(input) {
                input.addEventListener('change', function(e) {
                    const file = this.files[0];
                    const lessonId = this.id.split('-')[1];
                    const errorDiv = document.getElementById('documentError-' + lessonId);
                    const maxSize = parseInt(this.dataset.maxSize) || 10485760; // 10MB

                    if (file) {
                        let isValid = true;
                        let errorMessage = '';

                        if (!file.name.toLowerCase().endsWith('.pdf')) {
                            isValid = false;
                            errorMessage = 'Only PDF files are allowed.';
                        }
                        if (isValid && file.type !== 'application/pdf') {
                            isValid = false;
                            errorMessage = 'Invalid file type.';
                        }
                        if (isValid && file.size > maxSize) {
                            isValid = false;
                            errorMessage = `File too large. Max ${Math.round(maxSize/1024/1024)}MB.`;
                        }
                        if (isValid && file.size === 0) {
                            isValid = false;
                            errorMessage = 'File is empty.';
                        }

                        if (!isValid) {
                            this.setCustomValidity(errorMessage);
                            this.classList.add('is-invalid');
                            errorDiv.textContent = errorMessage;
                            errorDiv.style.display = 'block';
                            this.value = '';
                            e.preventDefault();
                            return false;
                        } else {
                            this.setCustomValidity('');
                            this.classList.remove('is-invalid');
                            errorDiv.style.display = 'none';
                        }
                    }
                });

                ['dragover', 'dragleave', 'drop'].forEach(evt => {
                    input.addEventListener(evt, function(e) {
                        e.preventDefault();
                        if(evt === 'dragover') this.classList.add('drag-over');
                        if(evt === 'dragleave' || evt === 'drop') this.classList.remove('drag-over');
                        if(evt === 'drop' && e.dataTransfer.files.length > 0) {
                            this.files = e.dataTransfer.files;
                            this.dispatchEvent(new Event('change'));
                        }
                    });
                });
            });

            // --- Other functions ---
            window.downloadMedia = function(url, filename) {
                const link = document.createElement('a');
                link.href = url;
                link.download = filename;
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            };

            window.openDocumentModal = function(lessonId) {
                const modal = new bootstrap.Modal(document.getElementById('documentModal-' + lessonId));
                modal.show();
            };

            window.printDocument = function(url) {
                const printWindow = window.open(url, '_blank');
                printWindow.addEventListener('load', function() { printWindow.print(); });
            };

            // --- Auto-resize videos ---
            const videos = document.querySelectorAll('.video-container video');
            videos.forEach(video => {
                video.addEventListener('loadedmetadata', function() {
                    const aspectRatio = this.videoWidth / this.videoHeight;
                    this.style.height = aspectRatio > 1.5 ? '200px' : '300px';
                });
            });
        });
    </script>


 <script>
    const sasToken = "?sp=r&st=2025-05-28T06:11:09Z&se=2026-01-01T14:11:09Z&spr=https&sv=2024-11-04&sr=c&sig=YdDYGbzpNp4XPSKVVDM0bb411XOEPgA8b0i2PFCfc1c%3D";

    function downloadMedia(baseUrl, fileName) {
        const fullUrl = baseUrl + sasToken;
        const a = document.createElement('a');
        a.href = fullUrl;
        a.download = fileName;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    }

    document.addEventListener('DOMContentLoaded', function () {
        const docLinks = document.querySelectorAll('.open-doc-btn');
        docLinks.forEach(function(link) {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                const baseUrl = this.getAttribute('data-href');
                window.open(baseUrl + sasToken, '_blank');
            });
        });
    });
</script>

 <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Lấy tất cả video elements
        const videos = document.querySelectorAll('.protected-video');

        videos.forEach(function(video) {
            // Disable right-click context menu
            video.addEventListener('contextmenu', function(e) {
                e.preventDefault();
                return false;
            });

            // Disable drag
            video.addEventListener('dragstart', function(e) {
                e.preventDefault();
                return false;
            });

            // Disable select
            video.addEventListener('selectstart', function(e) {
                e.preventDefault();
                return false;
            });

            // Disable keyboard shortcuts
            video.addEventListener('keydown', function(e) {
                // Disable F12, Ctrl+S, Ctrl+U, etc.
                if (e.keyCode === 123 || // F12
                    (e.ctrlKey && e.keyCode === 83) || // Ctrl+S
                    (e.ctrlKey && e.keyCode === 85) || // Ctrl+U
                    (e.ctrlKey && e.shiftKey && e.keyCode === 73) || // Ctrl+Shift+I
                    (e.ctrlKey && e.shiftKey && e.keyCode === 67) || // Ctrl+Shift+C
                    (e.ctrlKey && e.shiftKey && e.keyCode === 74)) { // Ctrl+Shift+J
                    e.preventDefault();
                    return false;
                }
            });

            // Disable print screen (limited effectiveness)
            video.addEventListener('keyup', function(e) {
                if (e.keyCode === 44) { // Print Screen
                    e.preventDefault();
                    return false;
                }
            });

            // Monitor video loading và prevent direct access
            video.addEventListener('loadstart', function() {
                // Thêm timestamp để URL không thể reuse
                const currentTime = Date.now();
                console.log('Video loading started at:', currentTime);
            });

            // Hide controls khi không hover (optional)
            let controlsTimeout;
            video.addEventListener('mouseenter', function() {
                clearTimeout(controlsTimeout);
                this.setAttribute('controls', 'controls');
            });

            video.addEventListener('mouseleave', function() {
                const self = this;
                controlsTimeout = setTimeout(function() {
                    // Giữ controls nhưng ẩn download button
                    // self.removeAttribute('controls');
                }, 3000);
            });
        });

        // Disable right-click trên toàn bộ video container
        const videoContainers = document.querySelectorAll('.video-container');
        videoContainers.forEach(function(container) {
            container.addEventListener('contextmenu', function(e) {
                e.preventDefault();
                return false;
            });
        });
    });

    // Prevent video URL access through browser tools
    (function() {
        // Disable console
        const devtools = {
            open: false,
            orientation: null
        };

        setInterval(function() {
            if (window.outerHeight - window.innerHeight > 200 ||
                window.outerWidth - window.innerWidth > 200) {
                // Dev tools might be open
                //console.clear();
            }
        }, 500);

        // Disable common debugging
        window.addEventListener('keydown', function(e) {
            if (e.keyCode === 123 || // F12
                (e.ctrlKey && e.shiftKey && e.keyCode === 73) || // Ctrl+Shift+I
                (e.ctrlKey && e.shiftKey && e.keyCode === 67) || // Ctrl+Shift+C
                (e.ctrlKey && e.shiftKey && e.keyCode === 74)) { // Ctrl+Shift+J
                e.preventDefault();
                return false;
            }
        });
    })();
</script>

