@page
@model final_project_fe.Pages.RecommendQuestionModel
@{
    ViewData["Title"] = "Learning Profile";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Learning Profile</title>
    <link rel="icon" type="image/x-icon" href="~/images/fav_icon.png" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .container {
            padding: 2rem 1rem;
        }

        .main-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: transform 0.3s ease;
        }

        .main-card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            text-align: center;
            border: none;
            position: relative;
            overflow: hidden;
        }

        .card-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            animation: shimmer 3s infinite;
        }

        @@keyframes shimmer {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .card-title {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 1rem;
            position: relative;
            z-index: 1;
        }

        .progress-container {
            position: relative;
            z-index: 1;
            margin-top: 1rem;
        }

        .progress {
            height: 8px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            overflow: hidden;
        }

        .progress-bar {
            background: linear-gradient(90deg, #ffd700, #ffed4e);
            border-radius: 10px;
            transition: width 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            box-shadow: 0 2px 10px rgba(255, 215, 0, 0.3);
        }

        .card-body {
            padding: 2.5rem;
        }

        .question-step {
            min-height: 400px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            animation: fadeInUp 0.6s ease-out;
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .question-title {
            color: #2c3e50;
            font-size: 1.4rem;
            font-weight: 600;
            margin-bottom: 2rem;
            text-align: center;
            position: relative;
        }

        .question-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 50px;
            height: 3px;
            background: linear-gradient(90deg, #667eea, #764ba2);
            border-radius: 2px;
        }

        .level-option {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .level-option::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(102, 126, 234, 0.1), transparent);
            transition: left 0.6s ease;
        }

        .level-option:hover {
            border-color: #667eea;
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.15);
        }

        .level-option:hover::before {
            left: 100%;
        }

        .level-option.selected {
            border-color: #667eea;
            background: linear-gradient(135deg, #667eea10, #764ba210);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.2);
        }

        .level-option .level-icon {
            font-size: 2rem;
            color: #667eea;
            margin-bottom: 0.5rem;
        }

        .level-option .level-name {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .level-option .level-desc {
            color: #6c757d;
            font-size: 0.9rem;
            line-height: 1.4;
        }

        .form-control {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.9);
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
            background: white;
        }

        .form-label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 1rem;
        }

        .btn-group {
            display: flex;
            gap: 1rem;
            justify-content: center;
            margin-top: 2rem;
        }

        .btn {
            border-radius: 25px;
            padding: 12px 30px;
            font-weight: 600;
            border: none;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transition: all 0.6s ease;
            transform: translate(-50%, -50%);
        }

        .btn:hover::before {
            width: 300px;
            height: 300px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #5a6268);
            color: white;
        }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(108, 117, 125, 0.3);
        }

        .btn-success {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(40, 167, 69, 0.3);
        }

        .error-message {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
            padding: 1rem;
            border-radius: 10px;
            margin-top: 1rem;
            animation: shake 0.5s ease-in-out;
        }

        @@keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }

        .step-indicator {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 1rem;
        }

        .step-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.3);
            margin: 0 0.5rem;
            transition: all 0.3s ease;
        }

        .step-dot.active {
            background: #ffd700;
            box-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
            display: none;
        }

        .loading-spinner {
            background: white;
            padding: 2rem;
            border-radius: 10px;
            text-align: center;
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
            border-width: 0.3em;
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .container {
                padding: 1rem;
            }

            .card-body {
                padding: 1.5rem;
            }

            .question-step {
                min-height: 350px;
            }

            .btn-group {
                flex-direction: column;
                align-items: center;
            }

            .btn {
                width: 100%;
                max-width: 250px;
            }
        }
    </style>
</head>
<body>
    <!-- Loading overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-10">
                <div class="card main-card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fas fa-graduation-cap me-2"></i>
                            Learning Profile Setup
                        </h3>
                        <div class="step-indicator">
                            <div class="step-dot active" id="dot1"></div>
                            <div class="step-dot" id="dot2"></div>
                            <div class="step-dot" id="dot3"></div>
                        </div>
                        <div class="progress-container">
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" style="width: 33%" id="progressBar"></div>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <form id="learningProfileForm" method="post" action="/RecommendQuestion">
                            @Html.AntiForgeryToken()
                            
                            <!-- Hidden inputs để chứa dữ liệu - match với UpdateUserMetadataDto -->
                            <input type="hidden" name="UserMetadata.Level" id="levelInput" />
                            <input type="hidden" name="UserMetadata.Goals" id="goalsInput" />
                            <input type="hidden" name="UserMetadata.FavouriteSubject" id="subjectInput" />
                            
                            <!-- Question 1: Level -->
                            <div class="question-step" id="step1">
                                <h4 class="question-title">Question 1/3: What's your current level?</h4>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <div class="level-option" data-level="Beginner">
                                            <div class="level-icon">
                                                <i class="fas fa-seedling"></i>
                                            </div>
                                            <div class="level-name">Beginner</div>
                                            <div class="level-desc">New to this field</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <div class="level-option" data-level="Intermediate">
                                            <div class="level-icon">
                                                <i class="fas fa-chart-line"></i>
                                            </div>
                                            <div class="level-name">Intermediate</div>
                                            <div class="level-desc">Have basic knowledge</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <div class="level-option" data-level="Advanced">
                                            <div class="level-icon">
                                                <i class="fas fa-rocket"></i>
                                            </div>
                                            <div class="level-name">Advanced</div>
                                            <div class="level-desc">Have practical experience</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <div class="level-option" data-level="Expert">
                                            <div class="level-icon">
                                                <i class="fas fa-crown"></i>
                                            </div>
                                            <div class="level-name">Expert</div>
                                            <div class="level-desc">Proficient and can guide others</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-primary" id="nextBtn1">
                                        <i class="fas fa-arrow-right me-2"></i>Next
                                    </button>
                                </div>
                            </div>

                            <!-- Question 2: Goals -->
                            <div class="question-step" id="step2" style="display: none;">
                                <h4 class="question-title">Question 2/3: What are your learning goals?</h4>
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-bullseye me-2"></i>Describe your learning goals:
                                    </label>
                                    <textarea class="form-control" rows="4" id="goals"
                                              placeholder="Example: I want to learn programming to develop web applications, prepare for exams, or enhance my professional knowledge..."></textarea>
                                </div>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-secondary" id="backBtn2">
                                        <i class="fas fa-arrow-left me-2"></i>Back
                                    </button>
                                    <button type="button" class="btn btn-primary" id="nextBtn2">
                                        <i class="fas fa-arrow-right me-2"></i>Next
                                    </button>
                                </div>
                            </div>

                            <!-- Question 3: Favourite Subject -->
                            <div class="question-step" id="step3" style="display: none;">
                                <h4 class="question-title">Question 3/3: What's your favorite subject?</h4>
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-heart me-2"></i>Favorite subject or field:
                                    </label>
                                    <input type="text" class="form-control" id="FavouriteSubject"
                                           placeholder="Example: Mathematics, Programming, English, Science, History..." />
                                </div>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-secondary" id="backBtn3">
                                        <i class="fas fa-arrow-left me-2"></i>Back
                                    </button>
                                    <button type="submit" class="btn btn-success" id="submitBtn">
                                        <i class="fas fa-check me-2"></i>Complete
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let currentStep = 1;
            let selectedLevel = '';
            const totalSteps = 3;

            // Update progress bar and step indicators
            function updateProgress() {
                const progress = (currentStep / totalSteps) * 100;
                document.getElementById('progressBar').style.width = progress + '%';
                
                // Update step dots
                for (let i = 1; i <= totalSteps; i++) {
                    const dot = document.getElementById(`dot${i}`);
                    if (i <= currentStep) {
                        dot.classList.add('active');
                    } else {
                        dot.classList.remove('active');
                    }
                }
            }

            // Show specific step
            function showStep(step) {
                // Hide all steps
                for (let i = 1; i <= totalSteps; i++) {
                    document.getElementById(`step${i}`).style.display = 'none';
                }
                // Show current step
                document.getElementById(`step${step}`).style.display = 'block';
                updateProgress();
            }

            // Level selection
            document.querySelectorAll('.level-option').forEach(option => {
                option.addEventListener('click', function() {
                    // Remove selection from all options
                    document.querySelectorAll('.level-option').forEach(opt => {
                        opt.classList.remove('selected');
                    });
                    // Add selection to clicked option
                    this.classList.add('selected');
                    selectedLevel = this.getAttribute('data-level');
                });
            });

            // Validate current step
            function validateStep(step) {
                if (step === 1) {
                    return selectedLevel !== '';
                } else if (step === 2) {
                    const goals = document.getElementById('goals');
                    return goals.value.trim() !== '';
                } else if (step === 3) {
                    const FavouriteSubject = document.getElementById('FavouriteSubject');
                    return FavouriteSubject.value.trim() !== '';
                }
                return false;
            }

            // Show error message
            function showError(message) {
                // Remove existing error
                const existingError = document.querySelector('.error-message');
                if (existingError) {
                    existingError.remove();
                }

                // Add new error
                const errorDiv = document.createElement('div');
                errorDiv.className = 'error-message';
                errorDiv.innerHTML = `<i class="fas fa-exclamation-triangle me-2"></i>${message}`;
                document.querySelector(`#step${currentStep}`).appendChild(errorDiv);

                // Remove error after 4 seconds
                setTimeout(() => {
                    if (errorDiv.parentNode) {
                        errorDiv.remove();
                    }
                }, 4000);
            }

            // Show loading overlay
            function showLoading() {
                document.getElementById('loadingOverlay').style.display = 'flex';
            }

            // Hide loading overlay
            function hideLoading() {
                document.getElementById('loadingOverlay').style.display = 'none';
            }

            // Next button for step 1
            document.getElementById('nextBtn1').addEventListener('click', function() {
                if (validateStep(1)) {
                    currentStep = 2;
                    showStep(2);
                } else {
                    showError('Please select your level!');
                }
            });

            // Next button for step 2
            document.getElementById('nextBtn2').addEventListener('click', function() {
                if (validateStep(2)) {
                    currentStep = 3;
                    showStep(3);
                } else {
                    showError('Please enter your learning goals!');
                }
            });

            // Back button for step 2
            document.getElementById('backBtn2').addEventListener('click', function() {
                currentStep = 1;
                showStep(1);
            });

            // Back button for step 3
            document.getElementById('backBtn3').addEventListener('click', function() {
                currentStep = 2;
                showStep(2);
            });

            // Form submission
            document.getElementById('learningProfileForm').addEventListener('submit', function(e) {
                e.preventDefault();
                
                if (validateStep(3)) {
                    // Show loading
                    showLoading();
                    
                    // Update hidden inputs with form data
                    document.getElementById('levelInput').value = selectedLevel;
                    document.getElementById('goalsInput').value = document.getElementById('goals').value;
                    document.getElementById('subjectInput').value = document.getElementById('FavouriteSubject').value;
                    
                    // Submit form using fetch API
                    const formData = new FormData(this);
                    
                    fetch('/RecommendQuestion', {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => {
                        if (response.ok) {
                            // Success - redirect to course recommendation page
                            window.location.href = '/CourseRecommend';
                        } else {
                            return response.text().then(text => {
                                throw new Error(`HTTP ${response.status}: ${text}`);
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        hideLoading();
                        showError('Something went wrong. Please try again!');
                    });
                } else {
                    showError('Please enter your favorite subject!');
                }
            });

            // Initialize
            showStep(1);
        });
    </script>
</body>
</html>